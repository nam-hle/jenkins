<testsuite name="Mocha Tests" tests="1051" failures="0" errors="0" skipped="0" timestamp="Sun, 20 Jun 2021 09:02:46 GMT" time="3.869">
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller.marshallTreeModel header" name="modelReferences should have link document models, other fields should be same as TreeModel&#x27;s header" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller.marshallTreeModel content content.nodes when not found dataModel from node.documentModelRef and params.dataModels" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.cor e.models.marshaller.marshallTreeModel content content.nodes content.nodes[_].childRelationshipConfigurations when a childRelationshipConfiguration has no column" name="should return that childRelationshipConfiguration with columns = undefined explicitly" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller.marshallTreeModel content content.nodes content.nodes[_].childRelationshipConfigurations when not found corresponding relationshipModel from a config.relationshipModelRef" name="should throw an error" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller.marshallTreeModel content content.nodes content.nodes[_].childRelationshipConfigurations when the linkDocumentModelName of corresponding relationshipModel is null" name="should return that childRelationshipConfiguration with columns = undefined explicitly" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller.marshallTreeModel content content.nodes content.nodes[_].childRelationshipConfigurations when not found corresponding linkDataModel from calculated linkDocumentModelName" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller.marshallTreeModel content content.nodes content.nodes[_].childRelationshipConfigurations when not found corresponding element in linkDataModel from column.elementRef" name="should throw an error" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller.marshallTreeModel content content.nodes content.nodes[_].childRelationshipConfigurations when everything works properly" name="should return columns of childRelationshipConfigurations which have the proper elementPath" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller.marshallTreeModel content content.nodes content.nodes[_].columns when everything works properly" name="should return columns which have the proper elementPath" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller.marshallTreeModel content configuration when not found a childRelationshipConfiguration of a node whose id is same as content.configuration.rootRef" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller.marshallTreeModel content configuration when found a childRelationshipConfiguration of a node whose id is same as content.configuration.rootRef" name="should add the root into content.configuration properly" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidTreeModel when given input = {&#x22;header&#x22;:{&#x22;id&#x22;:&#x22;1&#x22;,&#x22;modelType&#x22;:&#x22;tree&#x22;,&#x22;modelVersion&#x22;:&#x22;2.0.0&#x22;},&#x22;content&#x22;:{&#x22;subHeaderBox&#x22;:{},&#x22;footerBox&#x22;:{},&#x22;columns&#x22;:[],&#x22;nodes&#x22;:[],&#x22;configuration&#x22;:{&#x22;rootRef&#x22;:&#x22;&#x22;,&#x22;hierarchicalColumnRef&#x22;:&#x22;&#x22;,&#x22;dnd&#x22;:{&#x22;onDrag&#x22;:{&#x22;expandHoveredNode&#x22;:false}}}}}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidTreeModel when given input = {&#x22;header&#x22;:{&#x22;id&#x22;:&#x22;1&#x22;,&#x22;modelType&#x22;:&#x22;tree&#x22;,&#x22;modelVersion&#x22;:&#x22;2.0.0&#x22;},&#x22;content&#x22;:{&#x22;subHeaderBox&#x22;:{},&#x22;footerBox&#x22;:{},&#x22;columns&#x22;:[],&#x22;nodes&#x22;:[]}}" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidTreeModel when given input = {&#x22;header&#x22;:{&#x22;id&#x22;:&#x22;1&#x22;,&#x22;modelType&#x22;:&#x22;tree&#x22;,&#x22;modelVersion&#x22;:&#x22;2.0.0&#x22;},&#x22;content&#x22;:{&#x22;configuration&#x22;:{&#x22;rootRef&#x22;:&#x22;&#x22;,&#x22;hierarchicalColumnRef&#x22;:&#x22;&#x22;,&#x22;dnd&#x22;:{&#x22;onDrag&#x22;:{&#x22;expandHoveredNode&#x22;:false}}}}}" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidTreeModel when given input = {&#x22;content&#x22;:{&#x22;subHeaderBox&#x22;:{},&#x22;footerBox&#x22;:{},&#x22;columns&#x22;:[],&#x22;nodes&#x22;:[],&#x22;configuration&#x22;:{&#x22;rootRef&#x22;:&#x22;&#x22;,&#x22;hierarchicalColumnRef&#x22;:&#x22;&#x22;,&#x22;dnd&#x22;:{&#x22;onDrag&#x22;:{&#x22;expandHoveredNode&#x22;:false}}}}}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidTreeModel when given input = {&#x22;header&#x22;:{&#x22;id&#x22;:&#x22;1&#x22;,&#x22;modelType&#x22;:&#x22;tree&#x22;,&#x22;modelVersion&#x22;:&#x22;2.0.0&#x22;}}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidModelHeader when given input = {&#x22;id&#x22;:&#x22;1&#x22;,&#x22;modelType&#x22;:&#x22;tree&#x22;,&#x22;modelVersion&#x22;:&#x22;2.0.0&#x22;}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidModelHeader when given input = {&#x22;modelType&#x22;:&#x22;tree&#x22;,&#x22;modelVersion&#x22;:&#x22;2.0.0&#x22;}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidModelHeader when given input = {&#x22;id&#x22;:&#x22;1&#x22;,&#x22;modelVersion&#x22;:&#x22;2.0.0&#x22;}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidModelHeader when given input = {&#x22;id&#x22;:&#x22;1&#x22;,&#x22;modelType&#x22;:&#x22;tree&#x22;}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidModelHeader when given input = {&#x22;id&#x22;:&#x22;1&#x22;,&#x22;modelType&#x22;:&#x22;overview&#x22;,&#x22;modelVersion&#x22;:&#x22;2.0.0&#x22;}" name="should throw an error" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidTreeModelContent when given input = {&#x22;subHeaderBox&#x22;:{},&#x22;footerBox&#x22;:{},&#x22;columns&#x22;:[],&#x22;nodes&#x22;:[],&#x22;configuration&#x22;:{&#x22;rootRef&#x22;:&#x22;&#x22;,&#x22;hierarchicalColumnRef&#x22;:&#x22;&#x22;,&#x22;dnd&#x22;:{&#x22;onDrag&#x22;:{&#x22;expandHoveredNode&#x22;:false}}}}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidTreeModelContent when given input = {&#x22;footerBox&#x22;:{},&#x22;columns&#x22;:[],&#x22;nodes&#x22;:[],&#x22;configuration&#x22;:{&#x22;rootRef&#x22;:&#x22;&#x22;,&#x22;hierarchicalColumnRef&#x22;:&#x22;&#x22;,&#x22;dnd&#x22;:{&#x22;onDrag&#x22;:{&#x22;expandHoveredNode&#x22;:false}}}}" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidTreeModelContent when given input = {&#x22;subHeaderBox&#x22;:{},&#x22;columns&#x22;:[],&#x22;nodes&#x22;:[],&#x22;configuration&#x22;:{&#x22;rootRef&#x22;:&#x22;&#x22;,&#x22;hierarchicalColumnRef&#x22;:&#x22;&#x22;,&#x22;dnd&#x22;:{&#x22;onDrag&#x22;:{&#x22;expandHoveredNode&#x22;:false}}}}" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidTreeModelContent when given input = {&#x22;subHeaderBox&#x22;:{},&#x22;footerBox&#x22;:{},&#x22;nodes&#x22;:[],&#x22;configuration&#x22;:{&#x22;rootRef&#x22;:&#x22;&#x22;,&#x22;hierarchicalColumnRef&#x22;:&#x22;&#x22;,&#x22;dnd&#x22;:{&#x22;onDrag&#x22;:{&#x22;expandHoveredNode&#x22;:false}}}}" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidTreeModelContent when given input = {&#x22;subHeaderBox&#x22;:{},&#x22;footerBox&#x22;:{},&#x22;columns&#x22;:[],&#x22;configuration&#x22;:{&#x22;rootRef&#x22;:&#x22;&#x22;,&#x22;hierarchicalColumnRef&#x22;:&#x22;&#x22;,&#x22;dnd&#x22;:{&#x22;onDrag&#x22;:{&#x22;expandHoveredNode&#x22;:false}}}}" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidTreeModelContent when given input = {&#x22;subHeaderBox&#x22;:{},&#x22;footerBox&#x22;:{},&#x22;columns&#x22;:[],&#x22;nodes&#x22;:[]}" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidTreeModelContent when given input = {&#x22;footerBox&#x22;:{},&#x22;columns&#x22;:[],&#x22;nodes&#x22;:[],&#x22;configuration&#x22;:{&#x22;rootRef&#x22;:&#x22;&#x22;,&#x22;hierarchicalColumnRef&#x22;:&#x22;&#x22;,&#x22;dnd&#x22;:{&#x22;onDrag&#x22;:{&#x22;expandHoveredNode&#x22;:false}}}}" name="should throw an error" time="0.006"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidTreeModelContent when given input = {&#x22;subHeaderBox&#x22;:{&#x22;button&#x22;:{}},&#x22;footerBox&#x22;:{},&#x22;columns&#x22;:[],&#x22;nodes&#x22;:[],&#x22;configuration&#x22;:{&#x22;rootRef&#x22;:&#x22;&#x22;,&#x22;hierarchicalColumnRef&#x22;:&#x22;&#x22;,&#x22;dnd&#x22;:{&#x22;onDrag&#x22;:{&#x22;expandHoveredNode&#x22;:false}}}}" name="should throw an error" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidTreeModelContent when given input = {&#x22;subHeaderBox&#x22;:{},&#x22;footerBox&#x22;:{&#x22;minorButtons&#x22;:{&#x22;button&#x22;:[]}},&#x22;columns&#x22;:[],&#x22;nodes&#x22;:[],&#x22;configuration&#x22;:{&#x22;rootRef&#x22;:&#x22;&#x22;,&#x22;hierarchicalColumnRef&#x22;:&#x22;&#x22;,&#x22;dnd&#x22;:{&#x22;onDrag&#x22;:{&#x22;expandHoveredNode&#x22;:false}}}}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidSubHeaderType when given input = []" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidSubHeaderType when given input = {}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidSubHeaderType when given input = {}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidSubHeaderType when given input = {&#x22;id&#x22;:&#x22;0&#x22;}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidSubHeaderType when given input = {&#x22;id&#x22;:&#x22;0&#x22;}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidSubHeaderType when given input = {&#x22;id&#x22;:&#x22;0&#x22;,&#x22;button&#x22;:[]}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidSubHeaderType when given input = {&#x22;id&#x22;:&#x22;0&#x22;,&#x22;button&#x22;:[{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;event&#x22;:&#x22;A&#x22;}]}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidSubHeaderType when given input = {&#x22;id&#x22;:&#x22;0&#x22;,&#x22;button&#x22;:[{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;event&#x22;:&#x22;A&#x22;},{&#x22;id&#x22;:&#x22;1&#x22;,&#x22;event&#x22;:&#x22;A&#x22;}]}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidSubHeaderType when given input = {&#x22;button&#x22;:{}}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidSubHeaderType when given input = {&#x22;button&#x22;:[{}]}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidSubHeaderType when given input = {&#x22;button&#x22;:[{&#x22;id&#x22;:&#x22;0&#x22;}]}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidSubHeaderType when given input = {&#x22;button&#x22;:[{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;event&#x22;:&#x22;A&#x22;}]}" name="should throw an error" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidFooterType when given input = []" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidFooterType when given input = {}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidFooterType when given input = {&#x22;id&#x22;:&#x22;0&#x22;}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidFooterType when given input = {&#x22;id&#x22;:&#x22;0&#x22;,&#x22;majorButtons&#x22;:[]}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidFooterType when given input = {&#x22;id&#x22;:&#x22;0&#x22;,&#x22;majorButtons&#x22;:{}}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidFooterType when given input = {&#x22;id&#x22;:&#x22;0&#x22;,&#x22;majorButtons&#x22;:{&#x22;button&#x22;:[]}}" name="should return true" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidFooterType when given input = {&#x22;id&#x22;:&#x22;0&#x22;,&#x22;majorButtons&#x22;:{&#x22;button&#x22;:[{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;event&#x22;:&#x22;A&#x22;}]}}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidFooterType when given input = {&#x22;id&#x22;:&#x22;0&#x22;,&#x22;minorButtons&#x22;:[]}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidFooterType when given input = {&#x22;id&#x22;:&#x22;0&#x22;,&#x22;minorButtons&#x22;:{}}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidFooterType when given input = {&#x22;id&#x22;:&#x22;0&#x22;,&#x22;minorButtons&#x22;:{&#x22;button&#x22;:[]}}" name="should return true" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidFooterType when given input = {&#x22;id&#x22;:&#x22;0&#x22;,&#x22;minorButtons&#x22;:{&#x22;button&#x22;:[{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;event&#x22;:&#x22;A&#x22;}]}}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidFooterType when given input = {&#x22;id&#x22;:&#x22;0&#x22;,&#x22;majorButtons&#x22;:{&#x22;button&#x22;:[{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;event&#x22;:&#x22;A&#x22;},{&#x22;id&#x22;:&#x22;1&#x22;,&#x22;event&#x22;:&#x22;A&#x22;}]},&#x22;minorButtons&#x22;:{&#x22;button&#x22;:[{&#x22;id&#x22;:&#x22;1&#x22;,&#x22;event&#x22;:&#x22;A&#x22;},{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;event&#x22;:&#x22;A&#x22;}]}}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidFooterType when given input = {&#x22;id&#x22;:&#x22;0&#x22;,&#x22;majorButtons&#x22;:{&#x22;button&#x22;:{}}}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidFooterType when given input = {&#x22;id&#x22;:&#x22;0&#x22;,&#x22;majorButtons&#x22;:{&#x22;button&#x22;:[{}]}}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidFooterType when given input = {&#x22;id&#x22;:&#x22;0&#x22;,&#x22;minorButtons&#x22;:{&#x22;button&#x22;:{}}}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidFooterType when given input = {&#x22;id&#x22;:&#x22;0&#x22;,&#x22;minorButtons&#x22;:{&#x22;button&#x22;:[{}]}}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidFooterType when given input = {&#x22;minorButtons&#x22;:{&#x22;button&#x22;:[]}}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidFooterType when given input = {&#x22;majorButtons&#x22;:{&#x22;button&#x22;:[{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;event&#x22;:&#x22;A&#x22;}]}}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidConfiguration when given input = {&#x22;rootRef&#x22;:&#x22;root&#x22;,&#x22;hierarchicalColumnRef&#x22;:&#x22;1024&#x22;,&#x22;dnd&#x22;:{&#x22;onDrag&#x22;:{&#x22;expandHoveredNode&#x22;:false}}}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidConfiguration when given input = {&#x22;rootRef&#x22;:&#x22;root&#x22;,&#x22;root&#x22;:{},&#x22;hierarchicalColumnRef&#x22;:&#x22;1024&#x22;,&#x22;dnd&#x22;:{&#x22;onDrag&#x22;:{&#x22;expandHoveredNode&#x22;:false}}}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidConfiguration when given input = {&#x22;hierarchicalColumnRef&#x22;:&#x22;1024&#x22;,&#x22;dnd&#x22;:{&#x22;onDrag&#x22;:{&#x22;expandHoveredNode&#x22;:false}}}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidConfiguration when given input = {&#x22;rootRef&#x22;:&#x22;root&#x22;,&#x22;dnd&#x22;:{&#x22;onDrag&#x22;:{&#x22;expandHoveredNode&#x22;:false}}}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidConfiguration when given input = {&#x22;rootRef&#x22;:&#x22;root&#x22;,&#x22;hierarchicalColumnRef&#x22;:&#x22;1024&#x22;}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidDndConfiguration when given input = {&#x22;onDrag&#x22;:{&#x22;expandHoveredNode&#x22;:false}}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidDndConfiguration when given input = {&#x22;onDrag&#x22;:{&#x22;expandHoveredNode&#x22;:true}}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidDndConfiguration when given input = {&#x22;onDrag&#x22;:{}}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidDndConfiguration when given input = {}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidDndConfiguration when given input = {&#x22;onDrag&#x22;:{}}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumns when given input = []" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumns when given input = [{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;name&#x22;:&#x22;Location&#x22;,&#x22;label&#x22;:{},&#x22;width&#x22;:1,&#x22;fixedWidth&#x22;:true}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumns when given input = [{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;name&#x22;:&#x22;Location&#x22;,&#x22;label&#x22;:{},&#x22;width&#x22;:1,&#x22;fixedWidth&#x22;:true},{&#x22;id&#x22;:&#x22;1&#x22;,&#x22;name&#x22;:&#x22;Location&#x22;,&#x22;label&#x22;:{},&#x22;width&#x22;:1,&#x22;fixedWidth&#x22;:true}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumns when given input = {}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumns when given input = [{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;name&#x22;:&#x22;Location&#x22;,&#x22;label&#x22;:{},&#x22;width&#x22;:1,&#x22;fixedWidth&#x22;:true},{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;name&#x22;:&#x22;Expertise&#x22;,&#x22;label&#x22;:{},&#x22;width&#x22;:2,&#x22;fixedWidth&#x22;:false}]" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumns when given input = [{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;name&#x22;:&#x22;Location&#x22;,&#x22;label&#x22;:{},&#x22;width&#x22;:1,&#x22;fixedWidth&#x22;:true},{&#x22;id&#x22;:&#x22;1&#x22;,&#x22;name&#x22;:&#x22;Location&#x22;,&#x22;width&#x22;:1,&#x22;fixedWidth&#x22;:true}]" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumn when given input = {&#x22;id&#x22;:&#x22;0&#x22;,&#x22;name&#x22;:&#x22;Location&#x22;,&#x22;label&#x22;:{},&#x22;width&#x22;:1,&#x22;fixedWidth&#x22;:true}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumn when given input = {&#x22;name&#x22;:&#x22;Location&#x22;,&#x22;label&#x22;:{},&#x22;width&#x22;:1,&#x22;fixedWidth&#x22;:true}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumn when given input = {&#x22;id&#x22;:&#x22;0&#x22;,&#x22;label&#x22;:{},&#x22;width&#x22;:1,&#x22;fixedWidth&#x22;:true}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumn when given input = {&#x22;id&#x22;:&#x22;0&#x22;,&#x22;name&#x22;:&#x22;Location&#x22;,&#x22;width&#x22;:1,&#x22;fixedWidth&#x22;:true}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumn when given input = {&#x22;id&#x22;:&#x22;0&#x22;,&#x22;name&#x22;:&#x22;Location&#x22;,&#x22;label&#x22;:{},&#x22;fixedWidth&#x22;:true}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumn when given input = {&#x22;id&#x22;:&#x22;0&#x22;,&#x22;name&#x22;:&#x22;Location&#x22;,&#x22;label&#x22;:{},&#x22;width&#x22;:1}" name="should throw an error" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodes when given input = []" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodes when given input = [{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;documentModelRef&#x22;:&#x22;DomainTeam&#x22;,&#x22;configuration&#x22;:{&#x22;dnd&#x22;:false},&#x22;childRelationshipConfigurations&#x22;:[],&#x22;actions&#x22;:[]}]" name="should return true" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodes when given input = [{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;documentModelRef&#x22;:&#x22;DomainTeam&#x22;,&#x22;configuration&#x22;:{&#x22;dnd&#x22;:false},&#x22;childRelationshipConfigurations&#x22;:[],&#x22;actions&#x22;:[]},{&#x22;id&#x22;:&#x22;1&#x22;,&#x22;documentModelRef&#x22;:&#x22;DomainTeam&#x22;,&#x22;configuration&#x22;:{&#x22;dnd&#x22;:false},&#x22;childRelationshipConfigurations&#x22;:[],&#x22;actions&#x22;:[]}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodes when given input = {}" name="should throw an error" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodes when given input = [{&#x22;documentModelRef&#x22;:&#x22;DomainTeam&#x22;,&#x22;configuration&#x22;:{&#x22;dnd&#x22;:false},&#x22;childRelationshipConfigurations&#x22;:[],&#x22;actions&#x22;:[]}]" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodes when given input = [{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;configuration&#x22;:{&#x22;dnd&#x22;:false},&#x22;childRelationshipConfigurations&#x22;:[],&#x22;actions&#x22;:[]}]" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodes when given input = [{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;documentModelRef&#x22;:&#x22;DomainTeam&#x22;,&#x22;childRelationshipConfigurations&#x22;:[],&#x22;actions&#x22;:[]}]" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodes when given input = [{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;documentModelRef&#x22;:&#x22;DomainTeam&#x22;,&#x22;configuration&#x22;:{},&#x22;childRelationshipConfigurations&#x22;:[],&#x22;actions&#x22;:[]}]" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodes when given input = [{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;documentModelRef&#x22;:&#x22;DomainTeam&#x22;,&#x22;configuration&#x22;:{&#x22;dnd&#x22;:false},&#x22;columns&#x22;:[{}],&#x22;childRelationshipConfigurations&#x22;:[],&#x22;actions&#x22;:[]}]" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodes when given input = [{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;documentModelRef&#x22;:&#x22;DomainTeam&#x22;,&#x22;configuration&#x22;:{&#x22;dnd&#x22;:false},&#x22;columns&#x22;:[],&#x22;actions&#x22;:[]}]" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodes when given input = [{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;documentModelRef&#x22;:&#x22;DomainTeam&#x22;,&#x22;configuration&#x22;:{&#x22;dnd&#x22;:false},&#x22;childRelationshipConfigurations&#x22;:[]}]" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodes when given input = [{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;documentModelRef&#x22;:&#x22;DomainTeam&#x22;,&#x22;configuration&#x22;:{&#x22;dnd&#x22;:false},&#x22;childRelationshipConfigurations&#x22;:[],&#x22;actions&#x22;:[],&#x22;defaultRowAction&#x22;:{&#x22;custom&#x22;:true}}]" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodeConfiguration when given input = {}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodeConfiguration when given input = {&#x22;dnd&#x22;:false}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodeConfiguration when given input = {&#x22;dnd&#x22;:true}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodeConfiguration when given input = {}" name="should throw an error" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodeConfiguration when given input = {&#x22;Dnd&#x22;:true}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidChildRelationshipConfigurations when given input = []" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidChildRelationshipConfigurations when given input = [{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;relationshipModelRef&#x22;:&#x22;TeamPerson&#x22;,&#x22;parentRole&#x22;:&#x22;Team&#x22;}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidChildRelationshipConfigurations when given input = [{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;relationshipModelRef&#x22;:&#x22;TeamPerson&#x22;,&#x22;parentRole&#x22;:&#x22;Team&#x22;,&#x22;columns&#x22;:[]}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidChildRelationshipConfigurations when given input = [{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;relationshipModelRef&#x22;:&#x22;TeamPerson&#x22;,&#x22;parentRole&#x22;:&#x22;Team&#x22;,&#x22;columns&#x22;:[{&#x22;columnRef&#x22;:&#x22;0&#x22;,&#x22;elementRef&#x22;:&#x22;F0&#x22;,&#x22;another&#x22;:&#x22;thing&#x22;}]}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidChildRelationshipConfigurations when given input = [{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;relationshipModelRef&#x22;:&#x22;TeamPerson&#x22;,&#x22;parentRole&#x22;:&#x22;Team&#x22;},{&#x22;id&#x22;:&#x22;1&#x22;,&#x22;relationshipModelRef&#x22;:&#x22;TeamPerson&#x22;,&#x22;parentRole&#x22;:&#x22;Team&#x22;}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidChildRelationshipConfigurations when given input = {}" name="should throw an error" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidChildRelationshipConfigurations when given input = [{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;relationshipModelRef&#x22;:&#x22;TeamPerson&#x22;,&#x22;parentRole&#x22;:&#x22;Team&#x22;},{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;relationshipModelRef&#x22;:&#x22;TeamTeam&#x22;,&#x22;parentRole&#x22;:&#x22;Parent&#x22;}]" name="should throw an error" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidChildRelationshipConfigurations when given input = [{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;relationshipModelRef&#x22;:&#x22;TeamPerson&#x22;}]" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidChildRelationshipConfigurations when given input = [{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;parentRole&#x22;:&#x22;Parent&#x22;}]" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidChildRelationshipConfigurations when given input = [{&#x22;relationshipModelRef&#x22;:&#x22;TeamPerson&#x22;,&#x22;parentRole&#x22;:&#x22;Parent&#x22;}]" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidChildRelationshipConfigurations when given input = [{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;relationshipModelRef&#x22;:&#x22;TeamPerson&#x22;,&#x22;parentRole&#x22;:&#x22;Team&#x22;,&#x22;columns&#x22;:{}}]" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumnsMapping when given input = []" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumnsMapping when given input = [{&#x22;columnRef&#x22;:&#x22;0&#x22;,&#x22;elementRef&#x22;:&#x22;F0&#x22;}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumnsMapping when given input = [{&#x22;columnRef&#x22;:&#x22;0&#x22;,&#x22;elementRef&#x22;:&#x22;F0&#x22;,&#x22;another&#x22;:&#x22;things&#x22;}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumnsMapping when given input = [{&#x22;columnRef&#x22;:&#x22;0&#x22;,&#x22;elementRef&#x22;:&#x22;F0&#x22;},{&#x22;columnRef&#x22;:&#x22;0&#x22;,&#x22;elementRef&#x22;:&#x22;F0&#x22;},{&#x22;columnRef&#x22;:&#x22;0&#x22;,&#x22;elementRef&#x22;:&#x22;F0&#x22;}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumnsMapping when given input = [{&#x22;columnRef&#x22;:&#x22;0&#x22;,&#x22;elementRef&#x22;:&#x22;F0&#x22;},{&#x22;columnRef&#x22;:&#x22;1&#x22;,&#x22;elementRef&#x22;:&#x22;F1&#x22;}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumnsMapping when given input = [{}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumnsMapping when given input = {}" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumnsMapping when given input = {&#x22;columnRef&#x22;:&#x22;0&#x22;,&#x22;elementRef&#x22;:&#x22;F0&#x22;}" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumnsMapping when given input = [{&#x22;columnRef&#x22;:&#x22;0&#x22;}]" name="should throw an error" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumnsMapping when given input = [{&#x22;elementRef&#x22;:&#x22;F0&#x22;}]" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidColumnsMapping when given input = [{&#x22;columnRef&#x22;:&#x22;0&#x22;,&#x22;elementRef&#x22;:&#x22;F0&#x22;},{}]" name="should throw an error" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidButtonList when given input = []" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidButtonList when given input = {}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidButtonList when given input = {}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidButtonList when given input = {&#x22;button&#x22;:[]}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidButtonList when given input = {&#x22;button&#x22;:[{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;event&#x22;:&#x22;event_0&#x22;}]}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidButtonList when given input = {&#x22;button&#x22;:[{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;event&#x22;:&#x22;event_0&#x22;},{&#x22;id&#x22;:&#x22;1&#x22;,&#x22;event&#x22;:&#x22;event_0&#x22;}]}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidButtonList when given input = {&#x22;button&#x22;:{}}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidButtonList when given input = {&#x22;button&#x22;:[{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;event&#x22;:&#x22;event_0&#x22;},{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;event&#x22;:&#x22;event_1&#x22;}]}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidButtonList when given input = {&#x22;button&#x22;:[{&#x22;id&#x22;:&#x22;0&#x22;,&#x22;event&#x22;:&#x22;event_0&#x22;},{&#x22;id&#x22;:&#x22;1&#x22;}]}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidButton when given input = {&#x22;id&#x22;:&#x22;&#x22;,&#x22;event&#x22;:&#x22;&#x22;}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidButton when given input = {&#x22;id&#x22;:&#x22;&#x22;,&#x22;event&#x22;:&#x22;&#x22;,&#x22;annotations&#x22;:[]}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidButton when given input = {&#x22;id&#x22;:&#x22;&#x22;,&#x22;event&#x22;:&#x22;&#x22;,&#x22;annotations&#x22;:[{&#x22;name&#x22;:&#x22;admin&#x22;}]}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidButton when given input = []" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidButton when given input = {}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidButton when given input = {&#x22;id&#x22;:&#x22;&#x22;}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidButton when given input = {&#x22;event&#x22;:&#x22;&#x22;}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidButton when given input = {&#x22;id&#x22;:&#x22;&#x22;,&#x22;event&#x22;:&#x22;&#x22;,&#x22;annotations&#x22;:[{}]}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodeActionList when given input = []" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodeActionList when given input = [{&#x22;type&#x22;:&#x22;&#x22;}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodeActionList when given input = [{&#x22;type&#x22;:&#x22;event&#x22;},{&#x22;type&#x22;:&#x22;event&#x22;}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodeActionList when given input = [{&#x22;type&#x22;:&#x22;event&#x22;},{&#x22;type&#x22;:&#x22;event&#x22;,&#x22;annotations&#x22;:[{&#x22;name&#x22;:&#x22;event&#x22;}]}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodeActionList when given input = {}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodeActionList when given input = [{}]" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodeActionList when given input = [{&#x22;type&#x22;:&#x22;&#x22;},{}]" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodeAction when given input = {&#x22;type&#x22;:&#x22;&#x22;}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodeAction when given input = {&#x22;type&#x22;:&#x22;event&#x22;}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodeAction when given input = {&#x22;type&#x22;:&#x22;event&#x22;,&#x22;annotations&#x22;:[{&#x22;name&#x22;:&#x22;admin&#x22;}]}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodeAction when given input = {}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidNodeAction when given input = {&#x22;type&#x22;:&#x22;event&#x22;,&#x22;annotations&#x22;:[{}]}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidDefaultRowAction when given input = {&#x22;custom&#x22;:true,&#x22;event&#x22;:&#x22;add&#x22;}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidDefaultRowAction when given input = {}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidDefaultRowAction when given input = {&#x22;custom&#x22;:true,&#x22;event&#x22;:&#x22;&#x22;}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidDefaultRowAction when given input = {&#x22;custom&#x22;:false,&#x22;event&#x22;:&#x22;add&#x22;}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidDefaultRowAction when given input = {&#x22;event&#x22;:&#x22;add&#x22;}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidDefaultRowAction when given input = {&#x22;custom&#x22;:true}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidAnnotationList when given input = []" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidAnnotationList when given input = [{&#x22;name&#x22;:&#x22;admin&#x22;}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidAnnotationList when given input = [{&#x22;name&#x22;:&#x22;admin&#x22;},{&#x22;name&#x22;:&#x22;admin&#x22;}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidAnnotationList when given input = [{&#x22;name&#x22;:&#x22;admin&#x22;},{&#x22;name&#x22;:&#x22;user&#x22;}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidAnnotationList when given input = {}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidAnnotationList when given input = {&#x22;name&#x22;:&#x22;admin&#x22;}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidAnnotationList when given input = [{&#x22;Name&#x22;:&#x22;admin&#x22;}]" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidAnnotationList when given input = [{&#x22;name&#x22;:&#x22;admin&#x22;},{&#x22;lang&#x22;:&#x22;en&#x22;}]" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidAnnotation when given input = {&#x22;name&#x22;:&#x22;admin&#x22;}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidAnnotation when given input = {&#x22;role&#x22;:&#x22;Parent&#x22;,&#x22;name&#x22;:&#x22;admin&#x22;}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidAnnotation when given input = {}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidAnnotation when given input = []" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isValidAnnotation when given input = {&#x22;Name&#x22;:&#x22;admin&#x22;}" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isDistinctArray when given input = []" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isDistinctArray when given input = [{&#x22;id&#x22;:&#x22;&#x22;}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isDistinctArray when given input = [{&#x22;id&#x22;:&#x22;0&#x22;}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isDistinctArray when given input = [{&#x22;id&#x22;:&#x22;0&#x22;},{&#x22;id&#x22;:&#x22;1&#x22;}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isDistinctArray when given input = [{&#x22;id&#x22;:&#x22;&#x22;},{&#x22;id&#x22;:&#x22;&#x22;}]" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.marshaller isDistinctArray when given input = [{&#x22;id&#x22;:&#x22;2&#x22;},{&#x22;id&#x22;:&#x22;2&#x22;}]" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils findById given a basic group whose structure is:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;G0
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G1
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- G2
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |    | -- F3
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F4
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G5
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F6
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- F7 when id = 0" name="should return the Group has id = 0" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils findById given a basic group whose structure is:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;G0
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G1
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- G2
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |    | -- F3
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F4
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G5
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F6
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- F7 when id = 1" name="should return the Group has id = 1" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils findById given a basic group whose structure is:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;G0
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G1
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- G2
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |    | -- F3
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F4
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G5
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F6
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- F7 when id = 2" name="should return the Group has id = 2" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils findById given a basic group whose structure is:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;G0
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G1
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- G2
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |    | -- F3
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F4
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G5
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F6
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- F7 when id = 3" name="should return the Field has id = 3" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils findById given a basic group whose structure is:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;G0
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G1
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- G2
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |    | -- F3
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F4
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G5
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F6
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- F7 when id = 4" name="should return the Field has id = 4" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils findById given a basic group whose structure is:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;G0
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G1
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- G2
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |    | -- F3
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F4
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G5
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F6
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- F7 when id = 5" name="should return the Group has id = 5" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils findById given a basic group whose structure is:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;G0
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G1
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- G2
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |    | -- F3
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F4
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G5
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F6
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- F7 when id = 6" name="should return the Field has id = 6" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils findById given a basic group whose structure is:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;G0
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G1
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- G2
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |    | -- F3
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F4
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G5
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F6
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- F7 when id = 7" name="should return the Field has id = 7" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils findById given a basic group whose structure is:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;G0
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G1
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- G2
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |    | -- F3
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F4
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G5
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F6
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- F7 when id = 8" name="should return undefined" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils findByPath given a basic group whose structure is:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;G0
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G1
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- G2
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |    | -- F3
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F4
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G5
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F6
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- F7 when path = &#x27;/&#x27;" name="should return the Group which has id = 0" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils findByPath given a basic group whose structure is:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;G0
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G1
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- G2
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |    | -- F3
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F4
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G5
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F6
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- F7 when path = &#x27;/G1&#x27;" name="should return the Group which has id = 1" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils findByPath given a basic group whose structure is:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;G0
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G1
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- G2
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |    | -- F3
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F4
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G5
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F6
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- F7 when path = &#x27;/G1/G2&#x27;" name="should return the Group which has id = 2" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils findByPath given a basic group whose structure is:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;G0
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G1
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- G2
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |    | -- F3
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F4
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G5
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F6
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- F7 when path = &#x27;/G1/G2/F3&#x27;" name="should return the Field which has id = 3" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils findByPath given a basic group whose structure is:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;G0
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G1
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- G2
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |    | -- F3
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F4
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G5
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F6
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- F7 when path = &#x27;/G1/F4&#x27;" name="should return the Field which has id = 4" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils findByPath given a basic group whose structure is:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;G0
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G1
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- G2
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |    | -- F3
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F4
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G5
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F6
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- F7 when path = &#x27;/G5&#x27;" name="should return the Group which has id = 5" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils findByPath given a basic group whose structure is:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;G0
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G1
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- G2
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |    | -- F3
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F4
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G5
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F6
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- F7 when path = &#x27;/G5/F6&#x27;" name="should return the Field which has id = 6" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils findByPath given a basic group whose structure is:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;G0
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G1
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- G2
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |    | -- F3
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F4
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G5
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F6
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- F7 when path = &#x27;/F7&#x27;" name="should return the Field which has id = 7" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils findByPath given a basic group whose structure is:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;G0
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G1
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- G2
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |    | -- F3
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F4
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G5
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F6
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- F7 when path = &#x27;/G5/F8&#x27;" name="should throw an error" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils findByPath given a basic group whose structure is:
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;G0
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G1
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- G2
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |    | -- F3
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    |
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F4
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- G5
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|    | -- F6
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;|
&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;| -- F7 when path = &#x27;/G5/F6/F4&#x27;" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils isAttachment when given a field" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils isAttachment when given a normal group" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils isAttachment when given a attachment group" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils isMultiSelect when given a field" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils isMultiSelect when given a normal group" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils isMultiSelect when given a group has usageType = &#x27;multi-select&#x27;, but no child is EnumerationType field and has name &#x27;value&#x27;" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-model-utils isMultiSelect when given a group has usageType = &#x27;multi-select&#x27;, and contains a EnumerationType field child has name &#x27;value&#x27;" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath equal when p1 = [], p2 = []" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath equal when p1 = [{&#x22;elementName&#x22;:&#x22;A&#x22;,&#x22;index&#x22;:1}], p2 = []" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath equal when p1 = [{&#x22;elementName&#x22;:&#x22;A&#x22;,&#x22;index&#x22;:1}], p2 = [{&#x22;elementName&#x22;:&#x22;A&#x22;,&#x22;index&#x22;:0}]" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath equal when p1 = [{&#x22;elementName&#x22;:&#x22;A&#x22;,&#x22;index&#x22;:1}], p2 = [{&#x22;elementName&#x22;:&#x22;a&#x22;,&#x22;index&#x22;:1}]" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath equal when p1 = [{&#x22;elementName&#x22;:&#x22;A&#x22;,&#x22;index&#x22;:1}], p2 = [{&#x22;elementName&#x22;:&#x22;A&#x22;,&#x22;index&#x22;:1}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath equal when p1 = [{&#x22;elementName&#x22;:&#x22;A&#x22;,&#x22;index&#x22;:1},{&#x22;elementName&#x22;:&#x22;B&#x22;,&#x22;index&#x22;:2}], p2 = [{&#x22;elementName&#x22;:&#x22;A&#x22;,&#x22;index&#x22;:1}]" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath equal when p1 = [{&#x22;elementName&#x22;:&#x22;A&#x22;,&#x22;index&#x22;:1},{&#x22;elementName&#x22;:&#x22;B&#x22;,&#x22;index&#x22;:2}], p2 = [{&#x22;elementName&#x22;:&#x22;B&#x22;,&#x22;index&#x22;:2},{&#x22;elementName&#x22;:&#x22;A&#x22;,&#x22;index&#x22;:1}]" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath equal when p1 = [{&#x22;elementName&#x22;:&#x22;A&#x22;,&#x22;index&#x22;:1},{&#x22;elementName&#x22;:&#x22;B&#x22;,&#x22;index&#x22;:2}], p2 = [{&#x22;elementName&#x22;:&#x22;A&#x22;,&#x22;index&#x22;:1},{&#x22;elementName&#x22;:&#x22;B&#x22;,&#x22;index&#x22;:2}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath fromString when input = /" name="should return []" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath fromString when input = " name="should return []" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath fromString when input = /[0]/[1]" name="should return [{&#x22;elementName&#x22;:&#x22;&#x22;,&#x22;index&#x22;:0},{&#x22;elementName&#x22;:&#x22;&#x22;,&#x22;index&#x22;:1}]" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath fromString when input = 1[2]" name="should return [{&#x22;elementName&#x22;:&#x22;1&#x22;,&#x22;index&#x22;:2}]" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath fromString when input = 1_2[3]" name="should return [{&#x22;elementName&#x22;:&#x22;1_2&#x22;,&#x22;index&#x22;:3}]" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath fromString when input = 1-2[3]" name="should return [{&#x22;elementName&#x22;:&#x22;1-2&#x22;,&#x22;index&#x22;:3}]" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath fromString when input = /A[0]" name="should return [{&#x22;elementName&#x22;:&#x22;A&#x22;,&#x22;index&#x22;:0}]" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath fromString when input = A[0]" name="should return [{&#x22;elementName&#x22;:&#x22;A&#x22;,&#x22;index&#x22;:0}]" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath fromString when input = /A[0]/B[1]" name="should return [{&#x22;elementName&#x22;:&#x22;A&#x22;,&#x22;index&#x22;:0},{&#x22;elementName&#x22;:&#x22;B&#x22;,&#x22;index&#x22;:1}]" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath fromString when input = A[0]/B[1]" name="should return [{&#x22;elementName&#x22;:&#x22;A&#x22;,&#x22;index&#x22;:0},{&#x22;elementName&#x22;:&#x22;B&#x22;,&#x22;index&#x22;:1}]" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath toString when input = []" name="should return /" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath toString when input = [{&#x22;elementName&#x22;:&#x22;&#x22;,&#x22;index&#x22;:0}]" name="should return /[0]" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath toString when input = [{&#x22;elementName&#x22;:&#x22;&#x22;,&#x22;index&#x22;:0},{&#x22;elementName&#x22;:&#x22;&#x22;,&#x22;index&#x22;:1}]" name="should return /[0]/[1]" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath toString when input = [{&#x22;elementName&#x22;:&#x22;A&#x22;,&#x22;index&#x22;:0}]" name="should return /A[0]" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentPath toString when input = [{&#x22;elementName&#x22;:&#x22;A&#x22;,&#x22;index&#x22;:0},{&#x22;elementName&#x22;:&#x22;B&#x22;,&#x22;index&#x22;:1},{&#x22;elementName&#x22;:&#x22;C&#x22;,&#x22;index&#x22;:2}]" name="should return /A[0]/B[1]/C[2]" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;&#x22;" name="should return {&#x22;a&#x22;:[],&#x22;b&#x22;:{},&#x22;c&#x22;:[{&#x22;c1&#x22;:0},{&#x22;c2&#x22;:&#x22;x&#x22;},null],&#x22;d&#x22;:{&#x22;d1&#x22;:1,&#x22;d2&#x22;:&#x22;y&#x22;,&#x22;d4&#x22;:null},&#x22;e&#x22;:-2,&#x22;f&#x22;:&#x22;z&#x22;,&#x22;g&#x22;:true,&#x22;h&#x22;:false,&#x22;i&#x22;:&#x22;2019-12-31T17:00:00.000Z&#x22;,&#x22;j&#x22;:null}" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;a[0]&#x22;" name="should return []" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;a[99]&#x22;" name="should return []" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;b[0]&#x22;" name="should return {}" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;b[99]&#x22;" name="should return {}" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;c[0]&#x22;" name="should return [{&#x22;c1&#x22;:0},{&#x22;c2&#x22;:&#x22;x&#x22;},null]" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;c[1]/c1[0]&#x22;" name="should return 0" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;c[1]/c1[99]&#x22;" name="should return 0" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;c[2]/c2[0]&#x22;" name="should return &#x22;x&#x22;" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;c[2]/c2[99]&#x22;" name="should return &#x22;x&#x22;" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;c[3]&#x22;" name="should return [{&#x22;c1&#x22;:0},{&#x22;c2&#x22;:&#x22;x&#x22;},null]" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;c[4]&#x22;" name="should return [{&#x22;c1&#x22;:0},{&#x22;c2&#x22;:&#x22;x&#x22;},null]" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;c[99]&#x22;" name="should return [{&#x22;c1&#x22;:0},{&#x22;c2&#x22;:&#x22;x&#x22;},null]" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;d[0]&#x22;" name="should return {&#x22;d1&#x22;:1,&#x22;d2&#x22;:&#x22;y&#x22;,&#x22;d4&#x22;:null}" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;d[0]/d1[99]&#x22;" name="should return 1" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;d[0]/d2[99]&#x22;" name="should return &#x22;y&#x22;" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;d[0]/d3[99]&#x22;" name="should return null" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;d[0]/d4[99]&#x22;" name="should return null" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;d[0]/d4[99]/d5[99]&#x22;" name="should return null" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;d[0]/d5[99]&#x22;" name="should return null" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;d[99]&#x22;" name="should return {&#x22;d1&#x22;:1,&#x22;d2&#x22;:&#x22;y&#x22;,&#x22;d4&#x22;:null}" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;e[99]&#x22;" name="should return -2" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;f[99]&#x22;" name="should return &#x22;z&#x22;" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;g[99]&#x22;" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;h[99]&#x22;" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;i[99]&#x22;" name="should return &#x22;2019-12-31T17:00:00.000Z&#x22;" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;j[99]&#x22;" name="should return null" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when given path = &#x22;k[99]&#x22;" name="should return null" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.document-utils DocumentUtils when result of getValueOrUndefined function is undefined, but corresponding element is boolean field" name="should return false instead of null" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive isInstance when given value = &#x22;&#x22;" name="should return true" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive isInstance when given value = 0" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive isInstance when given value = -9007199254740991" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive isInstance when given value = null" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive isInstance when given value = false" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive isInstance when given value = null" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive isInstance when given value = &#x22;2019-12-31T17:00:00.000Z&#x22;" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive isInstance when given value = &#x22;2020-01-01T17:00:00.000Z&#x22;" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive isInstance when given value = []" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive isInstance when given value = {}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;&#x22;, second argument = &#x22;&#x22;" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;&#x22;, second argument = 0" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;&#x22;, second argument = -9007199254740991" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;&#x22;, second argument = null" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;&#x22;, second argument = false" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;&#x22;, second argument = null" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;&#x22;, second argument = &#x22;2019-12-31T17:00:00.000Z&#x22;" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;&#x22;, second argument = &#x22;2020-01-01T17:00:00.000Z&#x22;" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = 0, second argument = &#x22;&#x22;" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = 0, second argument = 0" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = 0, second argument = -9007199254740991" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = 0, second argument = null" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = 0, second argument = false" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = 0, second argument = null" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = 0, second argument = &#x22;2019-12-31T17:00:00.000Z&#x22;" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = 0, second argument = &#x22;2020-01-01T17:00:00.000Z&#x22;" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = -9007199254740991, second argument = &#x22;&#x22;" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = -9007199254740991, second argument = 0" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = -9007199254740991, second argument = -9007199254740991" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = -9007199254740991, second argument = null" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = -9007199254740991, second argument = false" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = -9007199254740991, second argument = null" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = -9007199254740991, second argument = &#x22;2019-12-31T17:00:00.000Z&#x22;" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = -9007199254740991, second argument = &#x22;2020-01-01T17:00:00.000Z&#x22;" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = null, second argument = &#x22;&#x22;" name="should return false" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = null, second argument = 0" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = null, second argument = -9007199254740991" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = null, second argument = null" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = null, second argument = false" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = null, second argument = null" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = null, second argument = &#x22;2019-12-31T17:00:00.000Z&#x22;" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = null, second argument = &#x22;2020-01-01T17:00:00.000Z&#x22;" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = false, second argument = &#x22;&#x22;" name="should return false" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = false, second argument = 0" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = false, second argument = -9007199254740991" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = false, second argument = null" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = false, second argument = false" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = false, second argument = null" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = false, second argument = &#x22;2019-12-31T17:00:00.000Z&#x22;" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = false, second argument = &#x22;2020-01-01T17:00:00.000Z&#x22;" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = null, second argument = &#x22;&#x22;" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = null, second argument = 0" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = null, second argument = -9007199254740991" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = null, second argument = null" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = null, second argument = false" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = null, second argument = null" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = null, second argument = &#x22;2019-12-31T17:00:00.000Z&#x22;" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = null, second argument = &#x22;2020-01-01T17:00:00.000Z&#x22;" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;2019-12-31T17:00:00.000Z&#x22;, second argument = &#x22;&#x22;" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;2019-12-31T17:00:00.000Z&#x22;, second argument = 0" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;2019-12-31T17:00:00.000Z&#x22;, second argument = -9007199254740991" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;2019-12-31T17:00:00.000Z&#x22;, second argument = null" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;2019-12-31T17:00:00.000Z&#x22;, second argument = false" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;2019-12-31T17:00:00.000Z&#x22;, second argument = null" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;2019-12-31T17:00:00.000Z&#x22;, second argument = &#x22;2019-12-31T17:00:00.000Z&#x22;" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;2019-12-31T17:00:00.000Z&#x22;, second argument = &#x22;2020-01-01T17:00:00.000Z&#x22;" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;2020-01-01T17:00:00.000Z&#x22;, second argument = &#x22;&#x22;" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;2020-01-01T17:00:00.000Z&#x22;, second argument = 0" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;2020-01-01T17:00:00.000Z&#x22;, second argument = -9007199254740991" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;2020-01-01T17:00:00.000Z&#x22;, second argument = null" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;2020-01-01T17:00:00.000Z&#x22;, second argument = false" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;2020-01-01T17:00:00.000Z&#x22;, second argument = null" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;2020-01-01T17:00:00.000Z&#x22;, second argument = &#x22;2019-12-31T17:00:00.000Z&#x22;" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONPrimitive areEqual when first argument = &#x22;2020-01-01T17:00:00.000Z&#x22;, second argument = &#x22;2020-01-01T17:00:00.000Z&#x22;" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONObject.isInstance when given value = {}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONObject.isInstance when given value = {&#x22;x&#x22;:[]}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONObject.isInstance when given value = {&#x22;x&#x22;:{}}" name="should return true" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONObject.isInstance when given value = {}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONObject.isInstance when given value = &#x22;&#x22;" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONObject.isInstance when given value = 0" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONObject.isInstance when given value = -9007199254740991" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONObject.isInstance when given value = true" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONObject.isInstance when given value = false" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONObject.isInstance when given value = null" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json JSONObject.isInstance when given value = &#x22;2019-12-31T17:00:00.000Z&#x22;" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json isArray when given value = []" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json isArray when given value = [0]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json isArray when given value = [null]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json isArray when given value = [{}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json isArray when given value = [{&#x22;x&#x22;:&#x22;1&#x22;}]" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json isArray when given value = &#x22;&#x22;" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json isArray when given value = 0" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json isArray when given value = -9007199254740991" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json isArray when given value = true" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json isArray when given value = false" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json isArray when given value = null" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json isArray when given value = &#x22;2019-12-31T17:00:00.000Z&#x22;" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json isArray when given value = {}" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.json isArray when given value = undefined" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils LinkDescriptorUtils getLinkEntitySpecByRole when given role = Team" name="should return {&#x22;role&#x22;:&#x22;Team&#x22;,&#x22;docRef&#x22;:&#x22;DomainTeam/1&#x22;}" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils LinkDescriptorUtils getLinkEntitySpecByRole when given role = Person" name="should return {&#x22;role&#x22;:&#x22;Person&#x22;,&#x22;docRef&#x22;:&#x22;DomainPerson/18&#x22;}" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils LinkDescriptorUtils getLinkEntitySpecByRole when given role = Employee" name="should return undefined" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils LinkDescriptorUtils getLinkEntitySpecByReversedRole when given role = Team" name="should return  {&#x22;role&#x22;:&#x22;Person&#x22;,&#x22;docRef&#x22;:&#x22;DomainPerson/18&#x22;}" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils LinkDescriptorUtils getLinkEntitySpecByReversedRole when given role = Person" name="should return  {&#x22;role&#x22;:&#x22;Team&#x22;,&#x22;docRef&#x22;:&#x22;DomainTeam/1&#x22;}" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils LinkDescriptorUtils getLinkEntitySpecByReversedRole when given role = Employee" name="should return  undefined" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils LinkDescriptorUtils getNodeIdentifierByRole given relationshipModel TeamPerson and role Team" name="should return {&#x22;type&#x22;:&#x22;DomainTeam&#x22;,&#x22;id&#x22;:&#x22;DomainTeam/1&#x22;}" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils LinkDescriptorUtils getNodeIdentifierByRole given relationshipModel TeamPerson and role Person" name="should return {&#x22;type&#x22;:&#x22;DomainPerson&#x22;,&#x22;id&#x22;:&#x22;DomainPerson/18&#x22;}" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils LinkDescriptorUtils getNodeIdentifierByRole given relationshipModel TeamPerson and role Employee" name="should return undefined" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils LinkDescriptorUtils getNodeIdentifierByRole given relationshipModel TeamPerson and role Team" name="should return {&#x22;type&#x22;:&#x22;DomainTeam&#x22;,&#x22;id&#x22;:&#x22;DomainTeam/1&#x22;}" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils LinkDescriptorUtils getNodeIdentifierByRole given relationshipModel TeamPerson and role Person" name="should return undefined" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils LinkDescriptorUtils getNodeIdentifierByRole given relationshipModel TeamPerson and role Employee" name="should return undefined" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils LinkDescriptorUtils getNodeIdentifierByReversedRole given linkDescriptor = [object Object], relationshipModel = TeamPerson,  role = Team" name="should return {&#x22;type&#x22;:&#x22;DomainPerson&#x22;,&#x22;id&#x22;:&#x22;DomainPerson/18&#x22;}" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils LinkDescriptorUtils getNodeIdentifierByReversedRole given linkDescriptor = [object Object], relationshipModel = TeamPerson,  role = Person" name="should return {&#x22;type&#x22;:&#x22;DomainTeam&#x22;,&#x22;id&#x22;:&#x22;DomainTeam/1&#x22;}" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils LinkDescriptorUtils getNodeIdentifierByReversedRole given linkDescriptor = [object Object], relationshipModel = TeamPerson,  role = Employee" name="should return undefined" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils LinkDescriptorUtils getNodeIdentifierByReversedRole given linkDescriptor = [object Object], relationshipModel = TeamPerson,  role = Team" name="should return undefined" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils LinkDescriptorUtils getNodeIdentifierByReversedRole given linkDescriptor = [object Object], relationshipModel = TeamPerson,  role = Person" name="should return {&#x22;type&#x22;:&#x22;DomainTeam&#x22;,&#x22;id&#x22;:&#x22;DomainTeam/1&#x22;}" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils LinkDescriptorUtils getNodeIdentifierByReversedRole given linkDescriptor = [object Object], relationshipModel = TeamPerson,  role = Employee" name="should return undefined" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils LinkDescriptorUtils getNodeIdentifiers given linkDescriptor = {&#x22;relationshipModel&#x22;:&#x22;TeamPerson&#x22;,&#x22;entities&#x22;:[{&#x22;role&#x22;:&#x22;Team&#x22;,&#x22;docRef&#x22;:&#x22;DomainTeam/1&#x22;},{&#x22;role&#x22;:&#x22;Person&#x22;,&#x22;docRef&#x22;:&#x22;DomainPerson/18&#x22;}]}, relationshipModel = TeamPerson" name="should return properly team and person identifiers" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils LinkDescriptorUtils getNodeIdentifiers when can not find entityCharacteristic from a linkDescriptor&#x27;s role" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils LinkDescriptorUtils getNodeIdentifiers when a linkDescriptor&#x27;s entity has no docRef" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils RelationshipModelUtils getEntityCharacteristicByRole given TeamPerson RelationshipModel and role = Team" name="should return Team" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils RelationshipModelUtils getEntityCharacteristicByRole given TeamPerson RelationshipModel and role = Person" name="should return Person" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils RelationshipModelUtils getEntityCharacteristicByRole given TeamPerson RelationshipModel and role = Employee" name="should return undefined" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils RelationshipModelUtils getEntityCharacteristicByReversedRole given TeamPerson RelationshipModel and role = Team" name="should return Person" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils RelationshipModelUtils getEntityCharacteristicByReversedRole given TeamPerson RelationshipModel and role = Person" name="should return Team" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.models.utils.relationship-utils RelationshipModelUtils getEntityCharacteristicByReversedRole given TeamPerson RelationshipModel and role = Employee" name="should return undefined" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.converter.converter-provider defaultConverterProvider given presentation information provider is not passed the created converter given a valid value" name="should use the correct validation code with default PresentationInformationProvider" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.converter.converter-provider defaultConverterProvider given presentation information provider is not passed the created converter given a value which is not of JSONPrimitive" name="should throw error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.converter.converter-provider defaultConverterProvider given presentation information provider is not passed the created converter given a JSONPrimitive value and invalid document model name" name="should throw error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.converter.converter-provider defaultConverterProvider given presentation information provider is passed the created converter given a valid value" name="should use the correct validation with the passed presentation information" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.converter.converter-provider defaultConverterProvider given presentation information provider is passed the created converter given a value which is not of JSONPrimitive" name="should throw error" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.converter.converter-provider defaultConverterProvider given presentation information provider is passed the created converter given a JSONPrimitive value and invalid document model name" name="should throw error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.localization.localization TextLocalizable given key and label" name="getKey should return the key" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.localization.localization TextLocalizable given key and label getDefault given a matched locale" name="should return the corresponding text" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.localization.localization TextLocalizable given key and label getDefault given a not matched locale" name="should return an empty optional value" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.localization.localization ResourceLocalizable" name="getKey should return the key" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.localization.localization ResourceLocalizable getDefault given the default locale de_DE" name="should return the corresponding text" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.localization.localization ResourceLocalizable getDefault given the default locale en_US" name="should return the corresponding text" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.localization.localizer getLocalizedText" name="should be called once with the correct params" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.localization.localizer getLocalizedText" name="should return the expected result" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.localization.localizer getLocalizedLabel given a key and labels" name="it should call the internal function getLocalizedText with correct params" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.localization.localizer getLocalizedEnumerationValue" name="should call localizer service with correct params" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.localization.localizer getLocalizedEnumerationValue" name="should return the expected value" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.localization.localizer getLocalizedBooleanValue given field keys and value=true" name="should call localizer service with correct params" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.localization.localizer getLocalizedBooleanValue given field keys and value=true" name="should return the expected value" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.localization.localizer getLocalizedBooleanValue given field keys and value=false" name="should call localizer service with correct params" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.localization.localizer getLocalizedBooleanValue given field keys and value=false" name="should return the expected value" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.localization.localizer getLocalizedConfirmValue given field keys and value=true" name="should call localizer service with correct params" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.localization.localizer getLocalizedConfirmValue given field keys and value=true" name="should return the expected value" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.localization.localizer getLocalizedConfirmValue given field keys and value=null" name="should call localizer service with correct params" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.localization.localizer getLocalizedConfirmValue given field keys and value=null" name="should return the expected value" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.localization.localizer getLocalizedResource given a resource key" name="should call localizer service with correct params" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.services.localization.localizer getLocalizedResource given a resource key" name="should return the expected result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDialogClosedMiddleware given a matched action given dialog state is null" name="should not dispatch any action" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDialogClosedMiddleware given a matched action given dialog state is null" name="should call next middleware and return the result" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDialogClosedMiddleware given a matched action given dialog state is of type InsertChildNode" name="should close the dialog and dispatch a failed event action" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDialogClosedMiddleware given a matched action given dialog state is of type InsertChildNode" name="should call next middleware and return the result" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDialogClosedMiddleware given a matched action given dialog state is of type InsertRootNode" name="should close the dialog and dispatch a failed event action" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDialogClosedMiddleware given a matched action given dialog state is of type InsertRootNode" name="should call next middleware and return the result" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDialogClosedMiddleware given a matched action given dialog state is of type MakeRootNode" name="should close the dialog and dispatch a failed event action" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDialogClosedMiddleware given a matched action given dialog state is of type MakeRootNode" name="should call next middleware and return the result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDialogClosedMiddleware given a non-matched action" name="should call next middleware and return the result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDialogConfirmed given a matched action given dialog state is null" name="should not dispatch any action" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDialogConfirmed given a matched action given dialog state is null" name="should call next middleware and return the result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDialogConfirmed given a matched action given dialog state is of type InsertChildNode" name="should close the dialog and dispatch a done event action" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDialogConfirmed given a matched action given dialog state is of type InsertChildNode" name="should call next middleware and return the result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDialogConfirmed given a matched action given dialog state is of type InsertRootNode" name="should close the dialog and dispatch a done event action" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDialogConfirmed given a matched action given dialog state is of type InsertRootNode" name="should call next middleware and return the result" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDialogConfirmed given a matched action given dialog is a confirmation dialog for event button" name="should close the dialog and dispatch a done event action" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDialogConfirmed given a matched action given dialog is a confirmation dialog for event button" name="should call next middleware and return the result" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDialogConfirmed given a matched action given dialog is a confirmation dialog for node event button" name="should close the dialog and dispatch a done node event action" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDialogConfirmed given a matched action given dialog is a confirmation dialog for node event button" name="should call next middleware and return the result" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDialogConfirmed given a matched action given dialog is a confirmation dialog for make root node action" name="should close the dialog and dispatch a done make root node action" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDialogConfirmed given a matched action given dialog is a confirmation dialog for make root node action" name="should call next middleware and return the result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDialogConfirmed given a non-matched action" name="should call next middleware and return the result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDndHover given a matched action given the node is not expanded" name="it should dispatch an expanding action" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDndHover given a matched action given the node is not expanded" name="should call next middleware and return the result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDndHover given a matched action given the node is not expanded given hovered node not containing any child relationship configuration" name="should not dispatch an expanding action" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDndHover given a matched action given the node is expanded" name="it should not dispatch anything" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDndHover given a matched action given the node is expanded" name="should call next middleware and return the result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onDndHover given a non-matched action" name="should call next middleware and return the result" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onEventButtonClickedRequest given a matched action" name="should dispatch setDialogState command" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onEventButtonClickedRequest given a matched action" name="should call next middleware and return the result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onEventButtonClickedRequest given a non-matched action" name="should call next middleware and return the result" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onEventButtonClickedRequest given a matched action given the position is above" name="should throw an error" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onEventButtonClickedRequest given a matched action given the position is below" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onEventButtonClickedRequest given a matched action given the position is asChild" name="should open a dialog" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onEventButtonClickedRequest given a matched action given the position is asChild" name="should call next middleware and return the result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onEventButtonClickedRequest given a non-matched action" name="should call next middleware and return the result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onInsertRootNodeRequestMiddleware given a matched action given the root document model does not have sub types" name="should dispatch request done action" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onInsertRootNodeRequestMiddleware given a matched action given the root document model does not have sub types" name="should call next middleware and return the result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onInsertRootNodeRequestMiddleware given a matched action given the root document have sub types" name="should open an insert-root dialog" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onInsertRootNodeRequestMiddleware given a matched action given the root document have sub types" name="should call next middleware and return the result" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onInsertRootNodeRequestMiddleware given a non-matched action" name="should call next middleware and return the result" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onEventButtonClickedRequest given a matched action" name="should open a dialog" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onEventButtonClickedRequest given a matched action" name="should call next middleware and return the result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onEventButtonClickedRequest given a non-matched action" name="should call next middleware and return the result" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onNodeEventButtonClickedRequest given a matched action" name="should open confirm dialog" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onNodeEventButtonClickedRequest given a matched action" name="should call next middleware and return the result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onNodeEventButtonClickedRequest given a non-matched action" name="should call next middleware and return the result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onNodeExpansionChanged given a matched action given the node is currently expanded" name="should dispatch command to update new expanded nodes" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onNodeExpansionChanged given a matched action given the node is currently expanded" name="should call next middleware and return the result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onNodeExpansionChanged given a matched action given the node is currently collapsed" name="should dispatch command to expand the node" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onNodeExpansionChanged given a matched action given the node is currently collapsed" name="should call next middleware and return the result" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onNodeExpansionChanged given a non-matched action" name="should call next middleware and return the result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onNodeSelectionChanged given a matched action given the action have selected = true given the node is currently selected" name="should dispatch command to set the same selected nodes" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onNodeSelectionChanged given a matched action given the action have selected = true given the node is currently selected" name="should call next middleware and return the result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onNodeSelectionChanged given a matched action given the action have selected = true given the node is currently not selected" name="should add the node to selected nodes" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onNodeSelectionChanged given a matched action given the action have selected = true given the node is currently not selected" name="should call next middleware and return the result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onNodeSelectionChanged given a matched action given the action have selected=false given the node is currently selected" name="should dispatch command to deselect the node" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onNodeSelectionChanged given a matched action given the action have selected=false given the node is currently selected" name="should call next middleware and return the result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onNodeSelectionChanged given a matched action given the action have selected=false given the node is currently not selected" name="should dispatch command to set the same selected nodes" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onNodeSelectionChanged given a matched action given the action have selected=false given the node is currently not selected" name="should call next middleware and return the result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.middleware.events.onNodeSelectionChanged given a non-matched action" name="should call next middleware and return the result" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.reducer.handler.setData handleSetData given an action with certain data" name="engine state with that data should be returned" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.reducer.handler.setDialogState handleSetInsertDialogState given an action with dialog state" name="engine state with that dialog state should be returned" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.reducer.handler.setExpandedNodes handleSetInsertDialogState given an action with state of expanded node" name="engine state with that state should be returned" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.reducer.handler.setExpandedNodes handleSetRoot given an action contain a specific root" name="an engine state with that root should be returned" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.reducer.handler.setSelectedNodes handleSetSelectedNodes given an action with a set of selected nodes" name="an engine state with that selected nodes should be returned" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.reducer.reducer-factory createEngineDataStateReducer given undefined state" name="initial state should be returned" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.reducer.reducer-factory createEngineDataStateReducer given a setData action" name="handleSetData should be used" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.reducer.reducer-factory createEngineDataStateReducer given a setRoot action" name="handleSetRoot should be used" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.reducer.reducer-factory createEngineUiStateReducer given undefined state" name="initial state should be returned" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.reducer.reducer-factory createEngineUiStateReducer given a setExpandedNodes action" name="handleSetExpandedNodes should be used" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.reducer.reducer-factory createEngineUiStateReducer given a setSelectedNodes action" name="handleSetSelectedNodes should be used" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.reducer.reducer-factory createEngineUiStateReducer given a setDialogState action" name="handleSetInsertDialogState should be used" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.data DataSelector data" name="should return data selector" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.data DataSelector root" name="should return root selector" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.data DataSelector node" name="should return node selector" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.data DataSelector link" name="should return link selector" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.data DataSelector selectors of relative nodes basic tree parent" name="should select the correct parent" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.data DataSelector selectors of relative nodes basic tree predecessor given the first node" name="should return undefined" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.data DataSelector selectors of relative nodes basic tree predecessor given a node in middle" name="should select the node&#x27;s predecessor" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.data DataSelector selectors of relative nodes basic tree successor given the last node" name="should return undefined" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.data DataSelector selectors of relative nodes basic tree successor given a node in middle" name="should select the correct successor" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.data DataSelector selectors of relative nodes circular tree parent" name="should select the correct parent" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.engine-state engineState given a valid state" name="the state should be returned" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.engine-state engineState given an invalid state" name="errors should be thrown" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.engine-state isEngineState given a valid state" name="it should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.engine-state isEngineState given an invalid state" name="it should return false" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model models" name="should return the correct selector" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model modelGraph" name="should return the correct selector" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model dataModelByName given valid data model names" name="should return the correct selector for each model name" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model dataModelByName given an invalid data model name" name="should return the selector that returns undefined" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model documentModelByName given valid data model names" name="should return the selector for each model name" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model documentModelByName given an invalid data model name" name="should return the selector that returns undefined" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model validationProviderByName given valid data model names" name="should return the selector for each model name" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model validationProviderByName given an invalid data model name" name="should return the selector that returns undefined" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model relationshipModels" name="should return the selector for relationship models" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model relationshipModelByName given valid relationship model names" name="should return the selector for each model name" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model relationshipModelByName given an invalid relationship model name" name="should return the selector that returns undefined" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model relationshipBetweenDocumentModels given DomainGroup and DomainElement" name="should return GroupElement" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model relationshipBetweenDocumentModels given DomainGroup and DomainGroup" name="should return GroupElement" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model relationshipBetweenDocumentModels given DomainGroup and DomainAttachmentGroup" name="should return GroupElement" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model relationshipBetweenDocumentModels given DomainGroup and DomainRule" name="should return GroupElement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model relationshipBetweenDocumentModels given DomainGroup and DomainDummy" name="should return undefined" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model relationshipBetweenDocumentModels given DomainAttachmentGroup and DomainRule" name="should return undefined" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model relationshipBetweenDocumentModels given DomainMultiSelectGroup and DomainField" name="should return undefined" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model subtypeModels given DomainElement" name="should return all groups, rule and field document model" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model subtypeModels given DomainGroup" name="should return two sub-groups" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model subtypeModels given DomainAttachmentGroup" name="should return empty array" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model uiModel" name="should return the selector for ui model" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model nodeModel given a type defined in tree nodes" name="should return the corresponding node model" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model nodeModel given a type not defined in tree nodes given the type does not have any super types defined in tree nodes" name="should return undefined" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model nodeModel given a type not defined in tree nodes given DomainBundle" name="should return Product Tree Node" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model reversedChildRelationshipConfigurations given A12 Team showcase given DomainTeam" name="should return teamTeamConfig" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model reversedChildRelationshipConfigurations given A12 Team showcase given DomainPerson" name="should return teamPersonConfig" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model reversedChildRelationshipConfigurations given Category showcase given DomainBundle" name="should return categoryProductConfig" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model reversedChildRelationshipConfigurations given Category showcase given DomainProduct" name="should return categoryProductConfig" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model reversedChildRelationshipConfigurations given Category showcase given DomainCategory" name="should return categoryCategoryConfig" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model reversedChildRelationshipConfigurations given Data Modeler showcase" name="should return with groupElementConfig" time="0.007"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model childEntityCharacteristic given Dummy RelationshipModel" name="should return undefined" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model childEntityCharacteristic given TeamPerson childRelationshipConfiguration" name="should return person entity characteristics" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.model childEntityCharacteristic given TeamTeam childRelationshipConfiguration" name="should return child team entity characteristics" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.row state nodeModel when not found the node model" name="should return undefined" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.row state nodeModel when found the node model" name="should return proper node model from the engine state" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.row state uiState" name="should return current uiState of the node" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.row state node" name="should return the node data from the engine state" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.row state link" name="should return link from the engine state" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.ui-state selectedNodes" name="should return the correct selector" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.ui-state expandedNodes" name="should return the correct selector" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.ui-state query" name="should return the correct selector" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.ui-state matchedNodes" name="should return the correct selector" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.ui-state busyNodes" name="should return the correct selector" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.ui-state nodeState given a list of engine states" name="the selector should return the valid corresponding node state" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.ui-state dialogState" name="should return the correct selector" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.selectors.ui-state locale" name="should return the correct selector" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.store TreeEngineState.NodePath areEqual when two paths have different length" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.store TreeEngineState.NodePath areEqual when two paths have same length but some identifier are different" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.store TreeEngineState.NodePath areEqual when two paths are identical" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.store TreeEngineState.NodePath fromString when the string is empty" name="should return empty node path" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.store TreeEngineState.NodePath fromString when the string is valid" name="should parse correctly" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.store TreeEngineState.NodePath toString when the path is empty" name="should return empty string" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.store TreeEngineState.NodePath toString when the string is valid" name="should parse correctly" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.store TreeEngineState.NodePath toLinkIdentifier when the path is empty" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.store TreeEngineState.NodePath toLinkIdentifier when the path has length 1" name="should return undefined" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.store TreeEngineState.NodePath toLinkIdentifier when the path has length greater than 1" name="should return the last identifier" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.store TreeEngineState.NodePath getParentNodePath when the path is empty" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.store TreeEngineState.NodePath getParentNodePath when the path has length 1" name="should return undefined" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.store TreeEngineState.NodePath getParentNodePath when the path has length greater than 1" name="should return the path except the last identifier" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.store Identifier from when the instance does not have the correct form" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.store Identifier from when the instance has the correct form" name="should parse correctly" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.store Identifier areEqual when the two identifier&#x27;s type are different" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.store Identifier areEqual when the two identifier has the same type and different id" name="should return false" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.store Identifier areEqual when the two identifier are identical" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.store Identifier areListEqual when two lists have different length" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.store Identifier areListEqual when two lists have same length but some identifiers are different" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.store.store Identifier areListEqual when two lists are identical" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.content-box-renderer padding" name="should have no padding" time="0.097"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.content-box-renderer Heading" name="should render Heading" time="0.017"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.content-box-renderer SubActionBar when subHeaderBox button is undefined or empty" name="should not render SubActionBar" time="0.013"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.content-box-renderer SubActionBar when subHeaderBox button is undefined or empty" name="should not render SubActionBar" time="0.012"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.content-box-renderer SubActionBar given one subHeaderBox button" name="should render SubActionBar with one button" time="0.021"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.content-box-renderer SubActionBar given smallView = true" name="should not render SubActionBar" time="0.013"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.content-box-renderer FooterBox given footerBox with 0 buttons" name="should not render footerBox" time="0.007"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.content-box-renderer FooterBox given footerBox with 0 buttons" name="should not render footerBox" time="0.007"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.content-box-renderer FooterBox given footerBox with 0 buttons" name="should not render footerBox" time="0.008"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.content-box-renderer FooterBox given footerBox with 0 buttons" name="should not render footerBox" time="0.011"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.content-box-renderer FooterBox given footerBox with 0 buttons" name="should not render footerBox" time="0.007"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.content-box-renderer FooterBox given footerBox with 1 buttons" name="should render FooterBox with 1 buttons" time="0.016"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.content-box-renderer FooterBox given footerBox with 1 buttons" name="should render FooterBox with 1 buttons" time="0.013"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.content-box-renderer FooterBox given footerBox with 2 buttons" name="should render FooterBox with 2 buttons" time="0.017"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.buttons props id" name="should have a proper id" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.buttons props label and title given english locale" name="should have german label and title" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.buttons props label and title given german locale" name="should have german label and title" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.buttons props primary and destructive when primary = false, destructive = false" name="should render button with primary = false, destructive = false" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.buttons props primary and destructive when primary = false, destructive = true" name="should render button with primary = false, destructive = true" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.buttons props primary and destructive when primary = false, destructive = undefined" name="should render button with primary = false, destructive = undefined" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.buttons props primary and destructive when primary = true, destructive = false" name="should render button with primary = true, destructive = false" time="0.011"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.buttons props primary and destructive when primary = true, destructive = true" name="should render button with primary = true, destructive = true" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.buttons props icon given icon is undefined" name="should not render icon" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.buttons props icon given filled icon whose name is &#x27;add&#x27;" name="should render icon with theme = &#x27;filled&#x27; and text = &#x27;add&#x27;" time="0.006"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.buttons props styles given styles = [&#x27;A&#x27;, &#x27;B&#x27;, &#x27;C&#x27;]" name="should render button with className = &#x27;A B C&#x27;" time="0.006"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.buttons onClick" name="should call onEventButtonClicked with proper arguments" time="0.006"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.expand-all-popup given ExpandAllPopUp" name="should render icons properly" time="0.041"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.expand-all-popup given ExpandAllPopUp" name="expand and collapse button should work properly" time="0.043"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.footer-box given various footer type given footerBox with 0 majorButtons and 0 minorButtons" name="should render footerBox properly with 0 majorButtons and 0 minorButtons" time="0.011"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.footer-box given various footer type given footerBox with 0 majorButtons and 0 minorButtons" name="should render footerBox properly with 0 majorButtons and 0 minorButtons" time="0.008"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.footer-box given various footer type given footerBox with 0 majorButtons and 0 minorButtons" name="should render footerBox properly with 0 majorButtons and 0 minorButtons" time="0.008"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.footer-box given various footer type given footerBox with 3 majorButtons and 0 minorButtons" name="should render footerBox properly with 3 majorButtons and 0 minorButtons" time="0.01"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.footer-box given various footer type given footerBox with 0 majorButtons and 0 minorButtons" name="should render footerBox properly with 0 majorButtons and 0 minorButtons" time="0.008"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.footer-box given various footer type given footerBox with 0 majorButtons and 0 minorButtons" name="should render footerBox properly with 0 majorButtons and 0 minorButtons" time="0.01"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.footer-box given various footer type given footerBox with 0 majorButtons and 2 minorButtons" name="should render footerBox properly with 0 majorButtons and 2 minorButtons" time="0.011"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.footer-box given various footer type given footerBox with 3 majorButtons and 2 minorButtons" name="should render footerBox properly with 3 majorButtons and 2 minorButtons" time="0.012"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.footer-box element &#x26; componentKey" name="should pass element &#x26; componentKey props to Button properly" time="0.007"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.heading given a label in model header given labelHidden = false" name="should render the label" time="0.007"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.heading given a label in model header given labelHidden = true" name="should not render the label" time="0.006"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.heading smallView given smallView = true given some sub-header buttons" name="should render popup menu with the buttons" time="0.006"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.heading smallView given smallView = true given wholeTreeExpand is on" name="should render a popup menu with two expand/collapse all buttons" time="0.006"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.heading smallView given smallView = true given sub-header buttons and wholeTreeExpand is on" name="should render a popup menu with sub-header buttons and two expand/collapse all buttons" time="0.006"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.heading smallView given smallView = true given no sub-header buttons and wholeTreeExpand is off" name="should not render popup menu" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.heading smallView given smallView = false" name="should not render popup menu" time="0.014"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.sub-action-bar given various subHeader type given subHeaderBox with 0 buttons" name="should render subHeaderBox with 0 buttons" time="0.006"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.sub-action-bar given various subHeader type given subHeaderBox with 0 buttons" name="should render subHeaderBox with 0 buttons" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.sub-action-bar given various subHeader type given subHeaderBox with 1 buttons" name="should render subHeaderBox with 1 buttons" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.sub-action-bar given various subHeader type given subHeaderBox with 2 buttons" name="should render subHeaderBox with 2 buttons" time="0.006"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.sub-action-bar alignment" name="should render a ButtonGroup with left alignment" time="0.007"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.sub-action-bar ExpandAllPopUp" name="should not render when wholeTreeExpansion is missing " time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.content-box.sub-components.sub-action-bar ExpandAllPopUp" name="should render when wholeTreeExpansion is true" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.dialog-renderer when current dialogState type is Confirmation" name="should render ConfirmationDialog" time="0.013"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.dialog-renderer when current dialogState type is InsertChildNode" name="should not render anything" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.dialog-renderer when current dialogState type is InsertRootNode" name="should not render anything" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.dialog-renderer when current dialogState is null" name="should not render anything" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a eventButton dialog title given undefined title" name="should take title from RESOURCE_KEYS" time="0.015"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a eventButton dialog title given empty title" name="should take title from RESOURCE_KEYS" time="0.012"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a eventButton dialog title given english locale" name="should render english title" time="0.01"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a eventButton dialog title given german locale" name="should render german title" time="0.012"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a eventButton dialog message given undefined message" name="should take message from RESOURCE_KEYS" time="0.015"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a eventButton dialog message given empty message" name="should take message from RESOURCE_KEYS" time="0.014"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a eventButton dialog message given english locale" name="should render english message" time="0.015"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a eventButton dialog message given german locale" name="should render german message" time="0.013"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a eventButton dialog close button primary &#x26; destructive" name="should be a secondary and no destructive button" time="0.013"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a eventButton dialog close button given english locale" name="should take english label from RESOURCE_KEYS" time="0.013"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a eventButton dialog close button given german locale" name="should take german label from RESOURCE_KEYS" time="0.014"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a eventButton dialog close button when click" name="should call onDialogClosed event only" time="0.013"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a eventButton dialog confirm button primary &#x26; destructive" name="should be a primary and destructive button" time="0.012"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a eventButton dialog confirm button given english locale" name="should have proper english label" time="0.012"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a eventButton dialog confirm button given german" name="should have proper german label" time="0.01"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a eventButton dialog confirm button when click" name="should call onDialogConfirmed event only" time="0.011"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a nodeEventButton dialog title given undefined title" name="should take title from RESOURCE_KEYS" time="0.014"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a nodeEventButton dialog title given empty title" name="should take title from RESOURCE_KEYS" time="0.011"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a nodeEventButton dialog title given english locale" name="should render english title" time="0.011"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a nodeEventButton dialog title given german locale" name="should render german title" time="0.01"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a nodeEventButton dialog message given undefined message" name="should take message from RESOURCE_KEYS" time="0.01"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a nodeEventButton dialog message given empty message" name="should take message from RESOURCE_KEYS" time="0.01"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a nodeEventButton dialog message given english locale" name="should render english message" time="0.01"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a nodeEventButton dialog message given german locale" name="should render german message" time="0.011"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a nodeEventButton dialog close button primary &#x26; destructive" name="should be a secondary and no destructive button" time="0.014"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a nodeEventButton dialog close button given english locale" name="should take english label from RESOURCE_KEYS" time="0.011"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a nodeEventButton dialog close button given german locale" name="should take german label from RESOURCE_KEYS" time="0.01"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a nodeEventButton dialog close button when click" name="should call onDialogClosed event only" time="0.011"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a nodeEventButton dialog confirm button primary &#x26; destructive" name="should be a primary and destructive button" time="0.012"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a nodeEventButton dialog confirm button given english locale" name="should have proper english label" time="0.012"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a nodeEventButton dialog confirm button given german" name="should have proper german label" time="0.016"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a nodeEventButton dialog confirm button when click" name="should call onDialogConfirmed event only" time="0.014"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a makeRootNode dialog title given undefined title" name="should take title from RESOURCE_KEYS" time="0.017"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a makeRootNode dialog title given empty title" name="should take title from RESOURCE_KEYS" time="0.014"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a makeRootNode dialog title given english locale" name="should render english title" time="0.012"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a makeRootNode dialog title given german locale" name="should render german title" time="0.012"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a makeRootNode dialog message given undefined message" name="should take message from RESOURCE_KEYS" time="0.012"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a makeRootNode dialog message given empty message" name="should take message from RESOURCE_KEYS" time="0.013"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a makeRootNode dialog message given english locale" name="should render english message" time="0.012"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a makeRootNode dialog message given german locale" name="should render german message" time="0.011"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a makeRootNode dialog close button primary &#x26; destructive" name="should be a secondary and no destructive button" time="0.012"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a makeRootNode dialog close button given english locale" name="should take english label from RESOURCE_KEYS" time="0.012"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a makeRootNode dialog close button given german locale" name="should take german label from RESOURCE_KEYS" time="0.014"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a makeRootNode dialog close button when click" name="should call onDialogClosed event only" time="0.015"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a makeRootNode dialog confirm button primary &#x26; destructive" name="should be a primary and destructive button" time="0.012"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a makeRootNode dialog confirm button given english locale" name="should have proper english label" time="0.011"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a makeRootNode dialog confirm button given german" name="should have proper german label" time="0.013"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.dialogs.sub-components.confirmation-dialog given a makeRootNode dialog confirm button when click" name="should call onDialogConfirmed event only" time="0.012"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.attachment-cell render when attachment is loading" name="should render nothing" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.attachment-cell render when attachment loading is failed" name="should render TextOutput with proper error message" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.attachment-cell render when attachment loading succeeds, but the result is undefined" name="should render nothing" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.attachment-cell render when attachment loading succeeds, but the result is an empty string" name="should render nothing" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.attachment-cell render when attachment loading succeeds, and result is a non-empty string" name="should render ResponsiveImageContainer with proper src" time="0.006"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.attachment-cell alt when attachment.description is not empty" name="should use it as ResponsiveImageContainer&#x27;s alt" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.attachment-cell alt when attachment.description is undefined, but attachment.original_filename is not an empty string" name="should use it as ResponsiveImageContainer&#x27;s alt" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.attachment-cell alt when attachment.description is undefined, but attachment.original_filename is an empty string" name="should use it as ResponsiveImageContainer&#x27;s alt" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value when not found the column by columnRef" name="should throw an error" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given enumeration type when props.value is null" name="should render empty TextOutput" time="0.006"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given enumeration type when not found value in element.fieldType.values" name="should render empty TextOutput" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given enumeration type when the result from localizer.getLocalizedEnumerationValue is empty" name="should use the props.value as its text" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given enumeration type when the result from localizer.getLocalizedEnumerationValue is not empty" name="should use the the result as its text" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given enumeration type when the locale is german" name="should use the the german result as its text" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given boolean type given props.value is falsy given props.value = null" name="should use RESOURCE_KEYS.false as its text" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given boolean type given props.value is falsy given props.value = false" name="should use RESOURCE_KEYS.false as its text" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given boolean type given props.value is falsy given props.value = 0" name="should use RESOURCE_KEYS.false as its text" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given boolean type given props.value is falsy given props.value = 0" name="should use RESOURCE_KEYS.false as its text" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given boolean type given props.value is falsy given props.value = 0" name="should use RESOURCE_KEYS.false as its text" time="0.006"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given boolean type given props.value is falsy given props.value = " name="should use RESOURCE_KEYS.false as its text" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given boolean type given props.value is falsy given props.value = NaN" name="should use RESOURCE_KEYS.false as its text" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given boolean type given props.value is truthy given props.value = true" name="should use RESOURCE_KEYS.true as its text" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given boolean type given props.value is truthy given props.value = -1" name="should use RESOURCE_KEYS.true as its text" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given boolean type given props.value is truthy given props.value = 3.14" name="should use RESOURCE_KEYS.true as its text" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given boolean type given props.value is truthy given props.value = Infinity" name="should use RESOURCE_KEYS.true as its text" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given boolean type given props.value is truthy given props.value = z" name="should use RESOURCE_KEYS.true as its text" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given boolean type given props.value is truthy given props.value = [object Object]" name="should use RESOURCE_KEYS.true as its text" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given boolean type given props.value is truthy given props.value = " name="should use RESOURCE_KEYS.true as its text" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given boolean type given props.value is truthy given props.value = Sun Jun 20 2021 16:02:41 GMT+0700 (Indochina Time)" name="should use RESOURCE_KEYS.true as its text" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given boolean type given germanLocale given props.value is true" name="should use de_DE.true as its text" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given boolean type given germanLocale given props.value is false" name="should use de_DE.false as its text" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given confirm type given props.value is falsy given props.value = null" name="should use RESOURCE_KEYS.null as its text" time="0.006"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given confirm type given props.value is falsy given props.value = false" name="should use RESOURCE_KEYS.null as its text" time="0.007"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given confirm type given props.value is falsy given props.value = 0" name="should use RESOURCE_KEYS.null as its text" time="0.006"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given confirm type given props.value is falsy given props.value = 0" name="should use RESOURCE_KEYS.null as its text" time="0.007"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given confirm type given props.value is falsy given props.value = 0" name="should use RESOURCE_KEYS.null as its text" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given confirm type given props.value is falsy given props.value = " name="should use RESOURCE_KEYS.null as its text" time="0.009"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given confirm type given props.value is falsy given props.value = NaN" name="should use RESOURCE_KEYS.null as its text" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given confirm type given props.value is truthy given props.value = true" name="should use RESOURCE_KEYS.true as its text" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given confirm type given props.value is truthy given props.value = -1" name="should use RESOURCE_KEYS.true as its text" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given confirm type given props.value is truthy given props.value = 3.14" name="should use RESOURCE_KEYS.true as its text" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given confirm type given props.value is truthy given props.value = Infinity" name="should use RESOURCE_KEYS.true as its text" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given confirm type given props.value is truthy given props.value = z" name="should use RESOURCE_KEYS.true as its text" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given confirm type given props.value is truthy given props.value = [object Object]" name="should use RESOURCE_KEYS.true as its text" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given confirm type given props.value is truthy given props.value = " name="should use RESOURCE_KEYS.true as its text" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given confirm type given props.value is truthy given props.value = Sun Jun 20 2021 16:02:41 GMT+0700 (Indochina Time)" name="should use RESOURCE_KEYS.true as its text" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given confirm type given germanLocale given props.value is true" name="should use de_DE.true as its text" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given confirm type given germanLocale given props.value is false" name="should use de_DE.false as its text" time="0.006"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given string type when convert.formatValue return null" name="should render empty string" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given string type when convert.formatValue return empty string" name="should render empty string" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given string type when convert.formatValue return non-empty string and no permit lineBreaks" name="should render textOutput whose text = xyz" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given string type when convert.formatValue return non-empty string and permit lineBreaks" name="should split the formatted value by line break, then use the br element as the splitter" time="0.008"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given number type when props.value = -1" name="should render TextOutput with text = -1" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given number type when props.value = 0" name="should render TextOutput with text = 0" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given number type when props.value = 1024" name="should render TextOutput with text = 1024" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given number type when props.value = 3.14" name="should render TextOutput with text = 3.14" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given date &#x26; time types when field type = DateType and returned value of converter = Thu Dec 24 2020 00:00:00 GMT+0700 (Indochina Time)" name="should render TextOutput with text = Thu Dec 24 2020 00:00:00 GMT+0700 (Indochina Time)" time="0.006"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given date &#x26; time types when field type = TimeType and returned value of converter = Thu Dec 24 2020 00:00:00 GMT+0700 (Indochina Time)" name="should render TextOutput with text = Thu Dec 24 2020 00:00:00 GMT+0700 (Indochina Time)" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given a field element given date &#x26; time types when field type = DateTimeType and returned value of converter = Thu Dec 24 2020 00:00:00 GMT+0700 (Indochina Time)" name="should render TextOutput with text = Thu Dec 24 2020 00:00:00 GMT+0700 (Indochina Time)" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given an attachment when not found documentId" name="should throw an error" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given an attachment when props.value is not a JSON object" name="should render nothing" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given an attachment when props.value is a JSON object, but not an instance of Attachment" name="should render nothing" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given an attachment when props.value is a JSON object and instance of Attachment when given a custom AttachmentCell" name="should use that component" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given an attachment when props.value is a JSON object and instance of Attachment when not given a custom AttachmentCell" name="should use the default component" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given an multi-select  when props.value is not array" name="should render nothing" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given an multi-select  when props.value is array when given a custom MultiSelectCell" name="should use that component" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell-ui-value given an multi-select  when props.value is array when no given a custom MultiSelectCell" name="should use the default component" time="0.006"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell given document cell when not found columnRef in nodeModel columns" name="should render nothing" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell given document cell when found columnRef in nodeModel columns when given a custom DocumentBodyCell" name="should use that custom component" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell given document cell when found columnRef in nodeModel columns when not given a custom DocumentBodyCell" name="should use the default component" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell given link cell when it has no parent" name="should render nothing" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell given link cell when not found any child relationship of its parent is equal to row.link.identifier.type" name="should render nothing" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell given link cell when found a child relationship in its parent, but not found the same columnRef in relationship columns" name="should render nothing" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell given link cell when child relationship and corresponding column are found when given a custom DocumentBodyCell" name="should use that custom component" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell given link cell when child relationship and corresponding column are found when not given a custom LinkDocumentBodyCell" name="should use the default component" time="0.012"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell given a hierarchical cell in a looped node row given initial expansion mode is all_levels" name="tooltip to warn circular relationship should be displayed" time="0.006"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell given a hierarchical cell in a looped node row given initial expansion mode is level_limit" name="tooltip to warn circular relationship should be not displayed" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.body-cell given a hierarchical cell in a looped node row given initial expansion mode is undefined" name="tooltip to warn circular relationship should be not displayed" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.document-body-cell when not found documentModel" name="should render nothing" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.document-body-cell when not found columnRef in nodeModel.columns" name="should render nothing" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.document-body-cell when node.document is not JSON format" name="should render nothing" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.document-body-cell when given custom BodyCellUIValue component" name="should use the component" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.document-body-cell when no given custom BodyCellUIValue component" name="should use the default component" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.link-document-body-cell given no parent" name="should render nothing" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.link-document-body-cell given no props.row.data.link" name="should render nothing" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.link-document-body-cell when not found relationship model from linkDescriptor" name="should render nothing" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.link-document-body-cell when not found linkDocument in props.row.data.link" name="should render nothing" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.link-document-body-cell when props.row.data.link.linkDocument is not a JSONObject instance" name="should render nothing" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.link-document-body-cell when not found relationshipModel.linkDocumentModel = null" name="should render nothing" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.link-document-body-cell when given custom BodyCellUIValue component" name="should use the component" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.body-cell.link-document-body-cell when no given custom BodyCellUIValue component" name="should use the default component" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.context-menu paddedLeft given groups without icon actions" name="should have paddedLeft = false" time="0.02"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.context-menu paddedLeft given groups with one action has icon" name="should have paddedLeft = false" time="0.015"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.context-menu title given groups without any titles" name="should not have List.SubHeader" time="0.015"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.context-menu title given groups with one title" name="should have one List.SubHeader with proper title" time="0.015"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.context-menu title given groups with two titles" name="should have two List.SubHeaders with proper titles" time="0.017"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.context-menu title given groups with two titles in german locale" name="should have two List.SubHeaders with proper german titles" time="0.015"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.context-menu Divider given a group with a title" name="should have no dividers" time="0.014"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.context-menu Divider given a group without title" name="should have no dividers" time="0.012"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.context-menu Divider given two groups and second group has a title" name="should have no dividers" time="0.016"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.context-menu Divider given two groups and second group has no title" name="should have one divider" time="0.014"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.context-menu Divider given three groups without any titles" name="should have two dividers" time="0.014"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.context-menu RowAction" name="should render RowAction properly" time="0.016"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.custom-field-type-cell value given a null value" name="should render TextOutput with null value" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.custom-field-type-cell value given a string value" name="should render TextOutput with the string value" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.custom-field-type-cell alignment given alignment = left" name="should render TextOutput with the same alignment = left" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.custom-field-type-cell alignment given alignment = right" name="should render TextOutput with the same alignment = right" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.custom-field-type-cell alignment given alignment = undefined" name="should render TextOutput with the same alignment = undefined" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.custom-field-type-cell given any styleable props" name="should pass the props down to TextOutput" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.dnd-body-row when not found the node model" name="should throw an error" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.dnd-body-row TreeEngineRowContextProvider value rowState" name="should be the return value of rowState selector" time="0.012"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.dnd-body-row TreeEngineRowContextProvider value isCircular when the row has no parent" name="should be false" time="0.006"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.dnd-body-row TreeEngineRowContextProvider value isCircular when the row does not belong to a circular relationship" name="should be false" time="0.006"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.dnd-body-row TreeEngineRowContextProvider value isCircular when the row belongs to a circular relationship" name="should be true" time="0.008"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.dnd-body-row DefaultTreeTableComponentRenderers.dndBodyRowRenderer when the row has no predecessor" name="should pass shouldRenderTopDropTarget = true to dndBodyRowRenderer" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.dnd-body-row DefaultTreeTableComponentRenderers.dndBodyRowRenderer when the row has a predecessor" name="should pass shouldRenderTopDropTarget = false to dndBodyRowRenderer" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.multi-select-cell when data is empty" name="should not render" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.multi-select-cell when not found the document model" name="should throw an error" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.multi-select-cell when data has only one value" name="should not render BulletList.Unordered" time="0.008"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.multi-select-cell when data has multiple values" name="should render BulletList.Unordered properly" time="0.009"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.multi-select-cell when data has multiple values ordering given english locale" name="should sort the labels alphabetically only when alphabeticalSorting = true" time="0.013"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.multi-select-cell when data has multiple values ordering given german locale" name="should sort the labels alphabetically only when alphabeticalSorting = true" time="0.013"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action-group when actions and context menu is empty" name="should render nothing" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action-group given three actions and no context menu" name="should render three RowAction only" time="0.01"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action-group given context menu and no actions" name="should render context menu only" time="0.008"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action-group given both actions and context menu" name="should render both actions and context menu" time="0.01"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action-group rowActionStateGetter given rowActionStateGetter which return hidden = true for actionB" name="should render only actionA and actionC" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action given Normal NodeEventActionButton label given english locale" name="should render english label" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action given Normal NodeEventActionButton label given german locale" name="should render german label" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action given Normal NodeEventActionButton title given english locale" name="should render english title" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action given Normal NodeEventActionButton title given german locale" name="should render german title" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action given Normal NodeEventActionButton style" name="should work properly" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action given Normal NodeEventActionButton onClick" name="should only call onNodeEventButtonClicked" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action given Normal NodeInsertActionButton label given english locale" name="should render english label" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action given Normal NodeInsertActionButton label given german locale" name="should render german label" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action given Normal NodeInsertActionButton title given english locale" name="should render english title" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action given Normal NodeInsertActionButton title given german locale" name="should render german title" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action given Normal NodeInsertActionButton style" name="should work properly" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action given Normal NodeInsertActionButton onClick" name="should only call spy" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action given Context NodeEventActionButton text given english locale" name="should render english label" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action given Context NodeEventActionButton text given german locale" name="should render german label" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action given Context NodeEventActionButton text style" name="should work properly" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action given Context NodeEventActionButton text onClick" name="should call onNodeEventButtonClicked" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action given Context NodeInsertActionButton text given english locale" name="should render english label" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action given Context NodeInsertActionButton text given german locale" name="should render german label" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action given Context NodeInsertActionButton text style" name="should work properly" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-action given Context NodeInsertActionButton text onClick" name="should call spy" time="0.005"/>
<testcase classname="com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-progress-indicator when node busy = false, node expanded = false" name="should not render" time="0.003"/>
<testcase classname="com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-progress-indicator when node busy = false, node expanded = true" name="should not render" time="0.002"/>
<testcase classname="com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-progress-indicator when node busy = true, node expanded = false" name="should not render" time="0.003"/>
<testcase classname="com.mgmtp.a12.tree-engine.core.view.components.tree-engine.sub-components.row-progress-indicator when node busy = true, node expanded = true" name="should render" time="0.037"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer" name="should have hideRoot props" time="0.056"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer componentRenderers" name="should be exist" time="0.037"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer componentRenderers additionalContentRenderer" name="should return RowProgressIndicator" time="0.042"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer componentRenderers headCellRenderer" name="should be exist" time="0.04"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer componentRenderers headCellRenderer when the column is not instance of TreeEngineDataColumn" name="should pass undefined to className" time="0.048"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer componentRenderers headCellRenderer when the column is instance of TreeEngineDataColumn, and column has header styles" name="should use the style of column header as className" time="0.039"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer data" name="should call useFlattenRows" time="0.031"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer columns" name="should call useTreeEngineColumns once" time="0.029"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer rowEventHandlers" name="should be existent" time="0.033"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer rowEventHandlers when onArrowClick is called" name="should call onNodeExpansionChanged only with proper arguments" time="0.019"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer rowEventHandlers when onClick is called" name="should call onRowClicked only with proper arguments" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer dragDropOptions" name="should call useTreeEngineDndConfiguration once" time="0.036"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer rowStyling" name="should be existent" time="0.028"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer rowStyling selected when row is selected" name="rowStyling.selected should be true" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer rowStyling selected when row is not selected" name="rowStyling.selected should be false" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer rowStyling collapsed when row is expanded" name="rowStyling.collapsed should be false" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer rowStyling collapsed when row is collapsed" name="rowStyling.collapsed should be true" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer rowStyling interactive when row.busy is true" name="rowStyling.interactive should be false" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer rowStyling interactive when row.busy is false" name="rowStyling.interactive should be true" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer rowStyling className when node styles are undefined, row.level is 0" name="rowStyling.className should be &#x27;treeEngine__node--level-0&#x27;" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer rowStyling className when node styles are s1, row.level is 1" name="rowStyling.className should be &#x27;s1 treeEngine__node--level-1&#x27;" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer rowStyling className when node styles are s2,s3, row.level is 2" name="rowStyling.className should be &#x27;s2 s3 treeEngine__node--level-2&#x27;" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer cellStyling" name="should be existent" time="0.035"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer cellStyling when column is not an instance of TreeEngineDataColumn" name="the classname should be undefined" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer cellStyling when column is an instance of TreeEngineDataColumn" name="the className should be taken from content styles of column" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.tree-engine-renderer DialogsRenderer" name="should be called" time="0.027"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-root Case 1: Root has no identifier Case 1.1: Root has no children" name="should return RootNodeRow with empty children" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-root Case 1: Root has no identifier Case 1.2: Tree has structure:
                       root (No identifier)
                       |-- team1
                       |   |-- team2
                       |   |    |-- person1
                       |   |-- team3 when the corresponding node in store for team1 is NOT found" name="should throw an error" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-root Case 1: Root has no identifier Case 1.2: Tree has structure:
                       root (No identifier)
                       |-- team1
                       |   |-- team2
                       |   |    |-- person1
                       |   |-- team3 when the corresponding node in store for team1 is found when corresponding node model for team1 is NOT found" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-root Case 1: Root has no identifier Case 1.2: Tree has structure:
                       root (No identifier)
                       |-- team1
                       |   |-- team2
                       |   |    |-- person1
                       |   |-- team3 when the corresponding node in store for team1 is found when corresponding node model for team1 is found when team1 node is NOT expanded" name="should only calculate nodeRow at 01 levels" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-root Case 1: Root has no identifier Case 1.2: Tree has structure:
                       root (No identifier)
                       |-- team1
                       |   |-- team2
                       |   |    |-- person1
                       |   |-- team3 when the corresponding node in store for team1 is found when corresponding node model for team1 is found when team1 node is expanded when the link between team1 and team2 is NOT found" name="should throw an error" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-root Case 1: Root has no identifier Case 1.2: Tree has structure:
                       root (No identifier)
                       |-- team1
                       |   |-- team2
                       |   |    |-- person1
                       |   |-- team3 when the corresponding node in store for team1 is found when corresponding node model for team1 is found when team1 node is expanded when the link between team1 and team2 is found when the corresponding relationshipModel is NOT found" name="should throw an error" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-root Case 1: Root has no identifier Case 1.2: Tree has structure:
                       root (No identifier)
                       |-- team1
                       |   |-- team2
                       |   |    |-- person1
                       |   |-- team3 when the corresponding node in store for team1 is found when corresponding node model for team1 is found when team1 node is expanded when the link between team1 and team2 is found when the corresponding relationshipModel is found when team2 is not expanded" name="should only calculate nodeRow at 02 levels" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-root Case 1: Root has no identifier Case 1.2: Tree has structure:
                       root (No identifier)
                       |-- team1
                       |   |-- team2
                       |   |    |-- person1
                       |   |-- team3 when the corresponding node in store for team1 is found when corresponding node model for team1 is found when team1 node is expanded when the link between team1 and team2 is found when the corresponding relationshipModel is found when team2 is expanded" name="should only calculate nodeRow at all (03) levels" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-root Case 2: Tree root has an identifier (team1), with structure
&#x9;&#x9;&#x9;       root (= team1)
&#x9;&#x9;&#x9;       |-- team2
&#x9;&#x9;&#x9;       |   |-- person1
&#x9;&#x9;&#x9;       |-- team3
&#x9;&#x9;&#x9;       when can not find opposite entity with root entity" name="should throw an error" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-root Case 2: Tree root has an identifier (team1), with structure
&#x9;&#x9;&#x9;       root (= team1)
&#x9;&#x9;&#x9;       |-- team2
&#x9;&#x9;&#x9;       |   |-- person1
&#x9;&#x9;&#x9;       |-- team3
&#x9;&#x9;&#x9;       when all node rows is collapsed" name="should calculate at 01 level" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-root Case 2: Tree root has an identifier (team1), with structure
&#x9;&#x9;&#x9;       root (= team1)
&#x9;&#x9;&#x9;       |-- team2
&#x9;&#x9;&#x9;       |   |-- person1
&#x9;&#x9;&#x9;       |-- team3
&#x9;&#x9;&#x9;       when team2 is expanded" name="should calculate at 02 levels" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column trivial properties" name="should work properly" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column label and icon label given english locale" name="should return english label" time="0.015"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column label and icon label given german locale" name="should return german label" time="0.014"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column label and icon icon given a column with icon" name="should render icon correctly" time="0.01"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column label and icon icon given a column without icon" name="should not render icon" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column label and icon given a column model with icon, label, with/without labelHidden with undefined labelHidden" name="should render label" time="0.01"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column label and icon given a column model with icon, label, with/without labelHidden with labelHidden = true" name="should render icon title" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column hierarchical" name="hierarchical should be true only when its id is equal to hierarchicalColumnRef" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is the hierarchical column when headerAlignment =  left, contentAlignment = left" name="should keep those values" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is the hierarchical column when headerAlignment =  left, contentAlignment = center" name="should keep those values" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is the hierarchical column when headerAlignment =  left, contentAlignment = right" name="should keep those values" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is the hierarchical column when headerAlignment =  left, contentAlignment = undefined" name="should keep those values" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is the hierarchical column when headerAlignment =  center, contentAlignment = left" name="should keep those values" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is the hierarchical column when headerAlignment =  center, contentAlignment = center" name="should keep those values" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is the hierarchical column when headerAlignment =  center, contentAlignment = right" name="should keep those values" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is the hierarchical column when headerAlignment =  center, contentAlignment = undefined" name="should keep those values" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is the hierarchical column when headerAlignment =  right, contentAlignment = left" name="should keep those values" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is the hierarchical column when headerAlignment =  right, contentAlignment = center" name="should keep those values" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is the hierarchical column when headerAlignment =  right, contentAlignment = right" name="should keep those values" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is the hierarchical column when headerAlignment =  right, contentAlignment = undefined" name="should keep those values" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is the hierarchical column when headerAlignment =  undefined, contentAlignment = left" name="should keep those values" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is the hierarchical column when headerAlignment =  undefined, contentAlignment = center" name="should keep those values" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is the hierarchical column when headerAlignment =  undefined, contentAlignment = right" name="should keep those values" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is the hierarchical column when headerAlignment =  undefined, contentAlignment = undefined" name="should keep those values" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is NON-number column when headerAlignment =  left, contentAlignment = left" name="should keep those values" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is NON-number column when headerAlignment =  left, contentAlignment = center" name="should keep those values" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is NON-number column when headerAlignment =  left, contentAlignment = right" name="should keep those values" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is NON-number column when headerAlignment =  left, contentAlignment = undefined" name="should keep those values" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is NON-number column when headerAlignment =  center, contentAlignment = left" name="should keep those values" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is NON-number column when headerAlignment =  center, contentAlignment = center" name="should keep those values" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is NON-number column when headerAlignment =  center, contentAlignment = right" name="should keep those values" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is NON-number column when headerAlignment =  center, contentAlignment = undefined" name="should keep those values" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is NON-number column when headerAlignment =  right, contentAlignment = left" name="should keep those values" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is NON-number column when headerAlignment =  right, contentAlignment = center" name="should keep those values" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is NON-number column when headerAlignment =  right, contentAlignment = right" name="should keep those values" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is NON-number column when headerAlignment =  right, contentAlignment = undefined" name="should keep those values" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is NON-number column when headerAlignment =  undefined, contentAlignment = left" name="should keep those values" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is NON-number column when headerAlignment =  undefined, contentAlignment = center" name="should keep those values" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is NON-number column when headerAlignment =  undefined, contentAlignment = right" name="should keep those values" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is NON-number column when headerAlignment =  undefined, contentAlignment = undefined" name="should keep those values" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is number column 0when headerAlignment = left, contentAlignment = left" name="headerAlignment should be left, contentAlignment should be left" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is number column 1when headerAlignment = left, contentAlignment = center" name="headerAlignment should be left, contentAlignment should be center" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is number column 2when headerAlignment = left, contentAlignment = right" name="headerAlignment should be left, contentAlignment should be right" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is number column 3when headerAlignment = left, contentAlignment = undefined" name="headerAlignment should be left, contentAlignment should be right" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is number column 4when headerAlignment = center, contentAlignment = left" name="headerAlignment should be center, contentAlignment should be left" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is number column 5when headerAlignment = center, contentAlignment = center" name="headerAlignment should be center, contentAlignment should be center" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is number column 6when headerAlignment = center, contentAlignment = right" name="headerAlignment should be center, contentAlignment should be right" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is number column 7when headerAlignment = center, contentAlignment = undefined" name="headerAlignment should be center, contentAlignment should be right" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is number column 8when headerAlignment = right, contentAlignment = left" name="headerAlignment should be right, contentAlignment should be left" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is number column 9when headerAlignment = right, contentAlignment = center" name="headerAlignment should be right, contentAlignment should be center" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is number column 10when headerAlignment = right, contentAlignment = right" name="headerAlignment should be right, contentAlignment should be right" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is number column 11when headerAlignment = right, contentAlignment = undefined" name="headerAlignment should be right, contentAlignment should be right" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is number column 12when headerAlignment = undefined, contentAlignment = left" name="headerAlignment should be right, contentAlignment should be left" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is number column 13when headerAlignment = undefined, contentAlignment = center" name="headerAlignment should be right, contentAlignment should be center" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is number column 14when headerAlignment = undefined, contentAlignment = right" name="headerAlignment should be right, contentAlignment should be right" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificHorizontalAlignment when the column is not the hierarchical column when the column is number column 15when headerAlignment = undefined, contentAlignment = undefined" name="headerAlignment should be right, contentAlignment should be right" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificVerticalAlignment when model&#x27;s alignment is undefined" name="should be Middle for header and Top for content as default" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column specificVerticalAlignment when model&#x27;s alignment is defined" name="should take from model&#x27;s alignment" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Non action column dataGetter" name="should return a BodyCell with proper props" time="0.006"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Action Column render when no node has actions or contextMenu" name="should not render action column" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Action Column render when one node has action" name="should render action column" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Action Column render when one node has contextMenu" name="should render action column" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Action Column properties dataGetter" name="should return a BodyCell with proper props" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns Action Column properties Trivia properties" name="should have proper properties" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns isNumberTypeColumn given a non-number column, named Photo" name="should return false" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns isNumberTypeColumn given a non-number column, named Name" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns isNumberTypeColumn given a non-number column, named Position" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns isNumberTypeColumn given a non-number column, named Location" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns isNumberTypeColumn given a non-number column, named Expertise" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns isNumberTypeColumn given a number column" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-columns isNumberTypeColumn when not found corresponding documentModel" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-dnd-configuration" name="should return all defined properties" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-dnd-configuration onBeginDrag" name="dndConfiguration.onBeginDrag and eventHandlers.onDndStarted should be called with proper arguments" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-dnd-configuration onHover when onHover is called first time when params.hoveredItem is undefined" name="should call clearTimeout and dndConfiguration.onHover, but never call setTimeout" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-dnd-configuration onHover when onHover is called first time when params.hoveredItem is defined, AND params.hoveredItem.position = top" name="should call clearTimeout and dndConfiguration.onHover, but never call setTimeout" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-dnd-configuration onHover when onHover is called first time when params.hoveredItem is defined, and params.hoveredItem.position = as_child  " name="should call clearTimeout, then setTimeout, then dndConfiguration.onHover" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-dnd-configuration onHover when onHover is called first time when params.hoveredItem is defined,
&#x9;when params.hoveredItem.position = as_child,
&#x9;when the timer is over
&#x9;when the item is not droppable" name="should call eventHandlers.onDndHover with canDrop argument = false" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-dnd-configuration onHover when onHover is called first time when params.hoveredItem is defined,
&#x9;when params.hoveredItem.position = as_child,
&#x9;when the timer is over
&#x9;when the item is droppable" name="should call eventHandlers.onDndHover with canDrop argument = true" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-dnd-configuration onHover when onHover is called second time when hover on different items" name="should call clearTimeout, but not setTimeout" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-dnd-configuration onHover when onHover is called second time when continue hover on the same item and same position" name="should not call neither clearTimeout nor setTimeout" time="0.003"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-dnd-configuration onHover when onHover is called second time when continue hover on the same item, but change position from as_child to top" name="should call clearTimeout, but not setTimeout" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-dnd-configuration onHover when onHover is called second time when continue hover on the same item, but change position from top to as_child" name="should call both clearTimeout, and setTimeout" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-dnd-configuration onHover when onHover is called 100 times on the same item and same position when position = as_child" name="should call clearTimeout once and setTimeout once" time="0.004"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-dnd-configuration onHover when onHover is called 100 times on the same item and same position when position = as_child" name="should call eventHandlers.onDndHover once" time="0.005"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-dnd-configuration onHover when onHover is called 100 times on the same item and same position when position = top" name="should call clearTimeout 100 times and not call setTimeout" time="0.007"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-dnd-configuration onEndDrag when params.dropResult is undefined" name="should call dndConfiguration.onEndDrag with proper arguments" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-dnd-configuration onEndDrag when params.dropResult is defined" name="should call dndConfiguration.onEndDrag with proper arguments" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-dnd-configuration onDrop" name="should call clearTimeout, then call eventHandlers.onDndDone" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-dnd-configuration canDrop when dndConfig.canDrop returns false" name="should return false" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.components.tree-engine.use-tree-engine-dnd-configuration canDrop when dndConfig.canDrop returns true" name="should return true" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.configuration canDrag when not found the node model" name="should return false" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.configuration canDrag when dnd configuration of dragItem is false" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.configuration canDrag when dnd configuration of dragItem is true" name="should return false" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules If hovered item is of type RootNodeRow, the drag item want to be a root node. when dragged item is a root node" name="should return false" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules If hovered item is of type RootNodeRow, the drag item want to be a root node. when hovered item is the root when dragged item has no parent" name="should return false" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules If hovered item is of type RootNodeRow, the drag item want to be a root node. when hovered item is the root when dragged item has a parent when document model of dragged item is same as document model when one of dragged item&#x27;s childRelationshipConfigurations is same as relationshipName and parentRole of root configuration" name="should return true" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules If hovered item is of type RootNodeRow, the drag item want to be a root node. when hovered item is the root when dragged item has a parent when document model of dragged item is same as document model when NONE of dragged item&#x27;s childRelationshipConfigurations is same as relationshipName and parentRole of root configuration" name="should return true" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules If hovered item is of type RootNodeRow, the drag item want to be a root node. when hovered item is the root when dragged item has a parent when document model of dragged item is NOT same as document model of root when not found root document model" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules If hovered item is of type RootNodeRow, the drag item want to be a root node. when hovered item is the root when dragged item has a parent when document model of dragged item is NOT same as document model of root when dragged item&#x27;s is NOT a sub-type of root" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules If hovered item is of type RootNodeRow, the drag item want to be a root node. when hovered item is the root when dragged item has a parent when document model of dragged item is NOT same as document model of root when dragged item&#x27;s is a sub-type of root" name="should return true" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules If hovered item is of type RootNodeRow, the drag item want to be a root node. when hovered item is not the root" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules A node row is not allowed to drop onto itself. when hovered item has the same identifier as the dragged item" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules A node row is not allowed to drop onto itself. when hovered item has the different identifier from the dragged item&#x27;s" name="should return no-statement" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules A node row can not be dropped on its parent because it has already been a child of the parent node. when hovered position is TOP when hovered item has no parent" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules A node row can not be dropped on its parent because it has already been a child of the parent node. when hovered position is TOP when hovered item has parent" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules A node row can not be dropped on its parent because it has already been a child of the parent node. when hovered position is AS_CHILD when dragged item has no parent" name="should return no-statement" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules A node row can not be dropped on its parent because it has already been a child of the parent node. when hovered position is AS_CHILD when dragged item has parent when dragged item&#x27;s parent is different from hovered item" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules A node row can not be dropped on its parent because it has already been a child of the parent node. when hovered position is AS_CHILD when dragged item has parent when dragged item&#x27;s parent is hovered item" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules A node row can not be dropped on its children because it will cause CIRCULAR relation. when dragged and hovered item are siblings" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules A node row can not be dropped on its children because it will cause CIRCULAR relation. when dragged item is the parent of the hovered item" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules A node row can not be dropped on its children because it will cause CIRCULAR relation. when dragged item is the grandparent of the hovered item" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules A node row can only be dropped as child of other node row when there is a valid relationship between them. when position is TOP" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules A node row can only be dropped as child of other node row when there is a valid relationship between them. when position is AS_CHILD when there is a valid relationship between them" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules A node row can only be dropped as child of other node row when there is a valid relationship between them. when position is AS_CHILD when there is no valid relationship between them" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules A node row cannot be dropped on its relative row because it has already been. when position = bottom, and hoveredItem is the predecessor of draggedItem" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules A node row cannot be dropped on its relative row because it has already been. when position = top, and hoveredItem is the successor of draggedItem" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules A node row cannot be dropped on its relative row because it has already been. when position = bottom, and hoveredItem is the successor of draggedItem" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules A node row cannot be dropped on its relative row because it has already been. when position = bottom, and hoveredItem is not related to draggedItem" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules A node row cannot be dropped on its relative row because it has already been. when position = top, and hoveredItem is the predecessor of draggedItem" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules A node row cannot be dropped on its relative row because it has already been. when position = top, and hoveredItem is not related to draggedItem" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules A node row cannot be dropped on its relative row because it has already been. when position = as_child, and hoveredItem is the predecessor of draggedItem" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules A node row cannot be dropped on its relative row because it has already been. when position = as_child, and hoveredItem is the successor of draggedItem" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.general-dnd-can-drop-rules A node row cannot be dropped on its relative row because it has already been. when position = as_child, and hoveredItem is not related to draggedItem" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent entity characteristic of the relationship model must be order-able. Cases 1.1: when position = TOP Case 1.1.1: when hoveredItem has parent when parent of hoveredItem has NO relationship with draggedItem" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent entity characteristic of the relationship model must be order-able. Cases 1.1: when position = TOP Case 1.1.1: when hoveredItem has parent when parent of hoveredItem has a relationship with draggedItem when parentEntityCharacteristic.ordered = TRUE" name="should return no-statement" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent entity characteristic of the relationship model must be order-able. Cases 1.1: when position = TOP Case 1.1.1: when hoveredItem has parent when parent of hoveredItem has a relationship with draggedItem when parentEntityCharacteristic.ordered = FALSE" name="should return false" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent entity characteristic of the relationship model must be order-able. Cases 1.1: when position = TOP Case 1.1.2: when hoveredItem has NO parent, but root has an identifier when root has NO relationship with draggedItem" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent entity characteristic of the relationship model must be order-able. Cases 1.1: when position = TOP Case 1.1.2: when hoveredItem has NO parent, but root has an identifier when root has a relationship with draggedItem when parentEntityCharacteristic.order = true" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent entity characteristic of the relationship model must be order-able. Cases 1.1: when position = TOP Case 1.1.2: when hoveredItem has NO parent, but root has an identifier when root has a relationship with draggedItem when parentEntityCharacteristic.order = false" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent entity characteristic of the relationship model must be order-able. Cases 1.2: when position = BOTTOM Case 1.2.1: when hoveredItem has parent when parent of hoveredItem has NO relationship with draggedItem" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent entity characteristic of the relationship model must be order-able. Cases 1.2: when position = BOTTOM Case 1.2.1: when hoveredItem has parent when parent of hoveredItem has a relationship with draggedItem when parentEntityCharacteristic.ordered = TRUE" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent entity characteristic of the relationship model must be order-able. Cases 1.2: when position = BOTTOM Case 1.2.1: when hoveredItem has parent when parent of hoveredItem has a relationship with draggedItem when parentEntityCharacteristic.ordered = FALSE" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent entity characteristic of the relationship model must be order-able. Cases 1.2: when position = BOTTOM Case 1.2.2: when hoveredItem has NO parent, but root has an identifier when root has NO relationship with draggedItem" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent entity characteristic of the relationship model must be order-able. Cases 1.2: when position = BOTTOM Case 1.2.2: when hoveredItem has NO parent, but root has an identifier when root has a relationship with draggedItem when parentEntityCharacteristic.order = true" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent entity characteristic of the relationship model must be order-able. Cases 1.2: when position = BOTTOM Case 1.2.2: when hoveredItem has NO parent, but root has an identifier when root has a relationship with draggedItem when parentEntityCharacteristic.order = false" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent entity characteristic of the relationship model must be order-able. Cases 1.3: when position = AS_CHILD when parent of hoveredItem has NO relationship with draggedItem" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent entity characteristic of the relationship model must be order-able. Cases 1.3: when position = AS_CHILD when parent of hoveredItem has relationship with draggedItem when parentEntityCharacteristic.ordered = true" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent entity characteristic of the relationship model must be order-able. Cases 1.3: when position = AS_CHILD when parent of hoveredItem has relationship with draggedItem when parentEntityCharacteristic.ordered = false" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent node rows must share the same relationship links to be order-able. Cases 2.1: when position = TOP Cases 2.1.1: when hoveredItem has NO parent when root has NO identifier" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent node rows must share the same relationship links to be order-able. Cases 2.1: when position = TOP Cases 2.1.1: when hoveredItem has NO parent when the root has identifier when root has NO relationship with dragItem" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent node rows must share the same relationship links to be order-able. Cases 2.1: when position = TOP Cases 2.1.1: when hoveredItem has NO parent when the root has identifier when root has relationship with dragItem when this relationship id is same as link type of hoveredItem" name="should return true" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent node rows must share the same relationship links to be order-able. Cases 2.1: when position = TOP Cases 2.1.1: when hoveredItem has NO parent when the root has identifier when root has relationship with dragItem when this relationship id is NOT same as link type of hoveredItem when this relationship id is same as link type of hoveredItem&#x27;s predecessor" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent node rows must share the same relationship links to be order-able. Cases 2.1: when position = TOP Cases 2.1.1: when hoveredItem has NO parent when the root has identifier when root has relationship with dragItem when this relationship id is NOT same as link type of hoveredItem when this relationship id is NOT same as link type of hoveredItem&#x27;s predecessor
&#x9;  when this relationship id is same as link type of hoveredItem&#x27;s successor" name="should return false" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent node rows must share the same relationship links to be order-able. Cases 2.1: when position = TOP Cases 2.1.2: when hoveredItem has parent when parent of hoveredItem has NO relationship with dragItem" name="should return no-statement" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent node rows must share the same relationship links to be order-able. Cases 2.1: when position = TOP Cases 2.1.2: when hoveredItem has parent when parent of hoveredItem has a relationship with draggedItem when this relationship id is same as link type of hoveredItem" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent node rows must share the same relationship links to be order-able. Cases 2.1: when position = TOP Cases 2.1.2: when hoveredItem has parent when parent of hoveredItem has a relationship with draggedItem when this relationship id is NOT same as link type of hoveredItem when this relationship id is same as link type of hoveredItem&#x27;s predecessor" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent node rows must share the same relationship links to be order-able. Cases 2.1: when position = TOP Cases 2.1.2: when hoveredItem has parent when parent of hoveredItem has a relationship with draggedItem when this relationship id is NOT same as link type of hoveredItem when this relationship id is NOT same as link type of hoveredItem&#x27;s predecessor
&#x9;  when this relationship id is same as link type of hoveredItem&#x27;s successor" name="should return false" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent node rows must share the same relationship links to be order-able. Cases 2.2: when position = BOTTOM Cases 2.2.1: when hoveredItem has NO parent when root has NO identifier" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent node rows must share the same relationship links to be order-able. Cases 2.2: when position = BOTTOM Cases 2.2.1: when hoveredItem has NO parent when the root has identifier when root has NO relationship with dragItem" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent node rows must share the same relationship links to be order-able. Cases 2.2: when position = BOTTOM Cases 2.2.1: when hoveredItem has NO parent when the root has identifier when root has relationship with dragItem when this relationship id is same as link type of hoveredItem" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent node rows must share the same relationship links to be order-able. Cases 2.2: when position = BOTTOM Cases 2.2.1: when hoveredItem has NO parent when the root has identifier when root has relationship with dragItem when this relationship id is NOT same as link type of hoveredItem when this relationship id is same as link type of hoveredItem&#x27;s predecessor" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent node rows must share the same relationship links to be order-able. Cases 2.2: when position = BOTTOM Cases 2.2.1: when hoveredItem has NO parent when the root has identifier when root has relationship with dragItem when this relationship id is NOT same as link type of hoveredItem when this relationship id is NOT same as link type of hoveredItem&#x27;s predecessor
&#x9;  when this relationship id is same as link type of hoveredItem&#x27;s successor" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent node rows must share the same relationship links to be order-able. Cases 2.2: when position = BOTTOM Cases 2.2.2: when hoveredItem has parent when parent of hoveredItem has NO relationship with dragItem" name="should return no-statement" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent node rows must share the same relationship links to be order-able. Cases 2.2: when position = BOTTOM Cases 2.2.2: when hoveredItem has parent when parent of hoveredItem has a relationship with draggedItem when this relationship id is same as link type of hoveredItem" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent node rows must share the same relationship links to be order-able. Cases 2.2: when position = BOTTOM Cases 2.2.2: when hoveredItem has parent when parent of hoveredItem has a relationship with draggedItem when this relationship id is NOT same as link type of hoveredItem when this relationship id is same as link type of hoveredItem&#x27;s predecessor" name="should return false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent node rows must share the same relationship links to be order-able. Cases 2.2: when position = BOTTOM Cases 2.2.2: when hoveredItem has parent when parent of hoveredItem has a relationship with draggedItem when this relationship id is NOT same as link type of hoveredItem when this relationship id is NOT same as link type of hoveredItem&#x27;s predecessor
&#x9;  when this relationship id is same as link type of hoveredItem&#x27;s successor" name="should return true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent node rows must share the same relationship links to be order-able. Case 2.3: when position = AS_CHILD when hoveredItem has NO relationship with dragItem" name="should return no-statement" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent node rows must share the same relationship links to be order-able. Case 2.3: when position = AS_CHILD when hoveredItem has a relationship with draggedItem
&#x9;  when this relationship id is same as link type of hoveredItem" name="should return true" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.dnd.ordering-dnd-can-drop-rules The parent node rows must share the same relationship links to be order-able. Case 2.3: when position = AS_CHILD when hoveredItem has a relationship with draggedItem
&#x9;  when this relationship id is NOT same as link type of hoveredItem" name="should return false" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.event-handlers-dispatch-map onNodeExpansionChanged when node is not expanded" name="should dispatch with expanded arg = true" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.event-handlers-dispatch-map onNodeExpansionChanged when node is expanded" name="should dispatch with expanded arg = false" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.event-handlers-dispatch-map onEventButtonClicked when button has a confirmation" name="should dispatch onEventButtonClickedRequest" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.event-handlers-dispatch-map onEventButtonClicked when button has no confirmation" name="should dispatch onEventButtonClicked" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.event-handlers-dispatch-map onNodeEventButtonClicked when button has a confirmation" name="should dispatch onNodeEventButtonClickedRequest" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.event-handlers-dispatch-map onNodeEventButtonClicked when button has no confirmation" name="should dispatch onNodeEventButtonClicked" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.event-handlers-dispatch-map onInsertChildNodeButtonClicked" name="should dispatch onInsertChildNodeRequest.started" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.event-handlers-dispatch-map onDialogClosed" name="should dispatch onDialogClosed" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.event-handlers-dispatch-map onDialogConfirmed" name="should dispatch onDialogConfirmed" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.event-handlers-dispatch-map onNodeSelectionChanged" name="should work properly" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.event-handlers-dispatch-map onDndStart" name="should dispatch onDndStarted" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.event-handlers-dispatch-map onDndDone when droppedNodeRow is undefined" name="should dispatch onDndDone" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.event-handlers-dispatch-map onDndDone when position is undefined" name="should dispatch onDndDone" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.event-handlers-dispatch-map onDndDone when droppedNodeRow and position are both defined" name="should dispatch onDndDone" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.event-handlers-dispatch-map onDndHover when canDrop = true, position = as_child" name="should dispatch onDndHover" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.event-handlers-dispatch-map onDndHover when canDrop = true, position = top" name="should dispatch onDndHover" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.event-handlers-dispatch-map onDndHover when canDrop = false, position = as_child" name="should dispatch onDndHover" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.event-handlers-dispatch-map onDndHover when canDrop = false, position = bottom" name="should dispatch onDndHover" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.event-handlers-dispatch-map onRowClicked when node model has defaultRowAction" name="should dispatch onRowClicked" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.configuration.event-handlers-dispatch-map onRowClicked when node model has no defaultRowAction" name="should dispatch onNodeSelectionChanged" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.context.context eventHandlers" name="should use props.eventHandlers" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.context.context dndConfiguration when not given a custom dndConfiguration" name="should use the defaultDndConfiguration" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.context.context dndConfiguration when given a custom dndConfiguration" name="should use the custom dndConfiguration" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.context.context attachmentHandler when not wrap with TreeEngineContextProvider" name="should use MissingAttachmentHandler by default" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.context.context attachmentHandler when wrap with TreeEngineContextProvider when not given attachmentHandler" name="should use the MissingAttachmentHandler" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.context.context attachmentHandler when wrap with TreeEngineContextProvider when given a custom attachmentHandler" name="should use the custom attachmentHandler" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.context.context converter when not wrap with TreeEngineContextProvider" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.context.context converter when wrap with TreeEngineContextProvider when not given a converter" name="should call and use the defaultConverterProvider" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.context.context converter when wrap with TreeEngineContextProvider when given a custom converter" name="should use the custom converter" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.context.context localizer when not wrap with TreeEngineContextProvider" name="should throw an error" time="0"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.context.context localizer when wrap with TreeEngineContextProvider when not given a localizerService" name="should call defaultLocalizerService " time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.context.context localizer when wrap with TreeEngineContextProvider when given a localizerService" name="should not call defaultLocalizerService" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.context.context componentMap when not given componentMap" name="should use the DefaultComponentMap" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.context.context componentMap when given a custom componentMap when not given DndProvider" name="should use the custom componentMap" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.context.context widgetMap when not given widgetMap" name="should use the DefaultWidgetMap" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.context.context widgetMap when given a custom widgetMap" name="should use the custom widgetMap" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.context.context rowActionStateGetter when not given rowActionStateGetter" name="should not have rowActionStateGetter" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.context.context rowActionStateGetter when not given rowActionStateGetter" name="should use the rowActionStateGetter" time="0.001"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.context.context state" name="should use props.state" time="0.002"/>
<testcase classname="@com.mgmtp.a12.tree-engine.core.view.context.context smallView given a specific smallView" name="should return that smallView from the context" time="0.003"/>
</testsuite>
